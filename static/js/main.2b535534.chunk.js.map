{"version":3,"sources":["AuthCheck/authCheck.js","Components/NavMenu/SideMenu.jsx","Components/CommonWrapper/CommonWrapper.jsx","Redux/Slice/loginSlice.js","utility/ErrorToast.js","Components/NavMenu/TopNav.jsx","Redux/Action/loginLogoutAction.js","Components/CommonWrapper/TopNavAndAllWrapper.jsx","utility/RemoveLocalStorage.js","Pages/Dashboard.jsx","Components/LoginComponent/LoginComponent.jsx","AllRoute/APIRoute.js","Pages/LoginPage.jsx","Redux/Slice/projectSlice.js","utility/SuccessToast.js","Redux/Action/ProjectAction.js","Components/ProjectsComponent/allSubComponent/ProjectAddModal.jsx","Components/ProjectsComponent/allSubComponent/ComponentTop.jsx","Assets/svg/loader.svg","Components/LoaderComponent/LoaderComponent.jsx","Components/ProjectsComponent/allSubComponent/ProjectUpdateModal.jsx","Components/ProjectsComponent/allSubComponent/ProjectTable.jsx","Components/ProjectsComponent/ProjectsComponent.jsx","Pages/ProjectPage.jsx","Redux/Slice/expenseSlice.js","Redux/Action/ExpenseAction.js","utility/Regex.js","Components/ProjectExpense/allSubComponent/Report/DailyReportPrint.jsx","Components/ProjectExpense/allSubComponent/AddExpense/AddExpenseForm.jsx","Components/ProjectExpense/allSubComponent/AddExpense/ExpenseModal.jsx","Components/ProjectExpense/allSubComponent/ProjectReportModalMainMenu.jsx","Components/ProjectExpense/allSubComponent/Report/DailyReport/DailyReportTop.jsx","Components/ProjectExpense/allSubComponent/Report/DailyReport/DailyReportBillComponent.jsx","Components/ProjectExpense/allSubComponent/Report/DailyReport/DailyReportDetailComponent.jsx","Components/ProjectExpense/allSubComponent/UpdateExpense/updateExpenseComponent.jsx","Components/ProjectExpense/allSubComponent/Report/DetailReport/DetailReportPrint.jsx","Components/ProjectExpense/allSubComponent/Report/DetailReport/DetailReportTable.jsx","Components/ProjectExpense/allSubComponent/Report/DetailReport/DetailReportComponent.jsx","Components/ProjectExpense/allSubComponent/Report/DetailReport/DetailReportComponentTop.jsx","Components/ProjectExpense/allSubComponent/Report/ElementUsesReport/ElementUsesTopComponent.jsx","Components/ProjectExpense/allSubComponent/Report/ElementUsesReport/ElementUsesTable.jsx","Components/ProjectExpense/allSubComponent/Report/ElementUsesReport/ElementUsesReportPrint.jsx","Components/ProjectExpense/allSubComponent/Report/ElementUsesReport/ElementUsesComponent.jsx","Components/ProjectExpense/allSubComponent/ProjectReportModal.jsx","Components/ProjectExpense/allSubComponent/ProjectTableForExpense.jsx","Components/ProjectExpense/allSubComponent/AddExpense/TopComponentForExpense.jsx","Components/ProjectExpense/ProjectExpenceComponent.jsx","Pages/ProjectExpensePage.jsx","AllRoute/AppRoute.jsx","App.js","reportWebVitals.js","Redux/store.js","index.js"],"names":["authCheck","allData","JSON","parse","localStorage","getItem","decodedData","permission","token","length","decodeId","id","decodeUserName","userName","allDataUserId","decode","allDataUserName","decodedFullName","fullName","allDataFullName","decodedDesignation","designation","allDataDesignation","stringify","e","SideMenu","props","className","to","admin_read","expense_read","CommonWrapper","navigate","useNavigate","useEffect","children","loginSlice","createSlice","name","initialState","test","reducers","state","action","payload","errorToast","message","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","TopNav","dispatch","useDispatch","useState","logoutStatus","setLogoutStatus","logoutOnClick","removeItem","onLogoutAction","href","role","slice","onClick","TopNavAndAllWrapper","removeLocalStorage","Dashboard","LoginComponent","useForm","register","handleSubmit","reset","errors","formState","logStatus","setLogStatus","React","amount","showPassword","values","setValues","Container","Row","Card","Col","lg","md","sm","xs","Form","onSubmit","data","axios","post","baseUrl","then","res","status","setItem","prevState","actions","catch","err","response","console","log","onLoginAction","target","FormControl","TextField","label","size","required","minLength","maxLength","type","InputLabel","htmlFor","Input","endAdornment","InputAdornment","IconButton","onMouseDown","event","preventDefault","password","Button","variant","allowFullScreen","style","border","src","width","height","allow","LoginPage","projectSlice","allProjectData","singleProjectData","AllProject","singleProject","successToast","success","getAllProjectAction","setLoader","headers","get","ProjectAddModal","addModalStatus","setAddModalStatus","Date","startDate","setStartDate","endDate","setEndDate","saveBtnRef","useRef","addModalHandleClose","ExampleCustomInput","forwardRef","ref","value","ExampleCustomInputForEnd","Modal","show","onHide","Header","closeButton","Title","Body","clssName","Group","controlId","Label","selected","onChange","date","dateFormat","customInput","startFormatedDate","getUTCFullYear","getUTCMonth","getUTCDate","endFormatedDate","current","disabled","setTimeout","addProjectAction","Control","placeholder","projectName","defaultValue","Footer","memo","ComponentTop","admin_write","LoaderComponent","loader","loaderImg","ProjectUpdateModal","updateModalShow","setUpdateModalShow","projectSingleData","useSelector","projects","setStatus","updateFormRef","tartDateFromDB","start_date","endDateFromDB","deadline","updateModalHandleClose","projectUpdateAction","project_name","owner_name","owner_phn","project_location","project_ammount","as","column","Check","getAttribute","checked","ProjectTable","tableData","updateModalHandleShow","getSingleProjectForUpdateAction","products","columns","dataField","text","headerStyle","colum","colIndex","textAlign","padding","formatter","cell","row","rowIndex","columnsIndex","cursor","isDummyField","admin_delete","striped","keyField","ProjectsComponent","ProjectPage","expenseSlice","ProjectForExpense","itemAndUnit","projectForReport","getSingleExpenseForEdit","getLastExpense","expenseForDetailReport","allElementReport","allProjectForExpense","getItemAndUnitSlice","getProjectForReportSlice","getDailyExpenseForEditSlice","getLastExpenseForDailyReportSlice","getExpenseForDetailReportSlice","getElementUsesSlice","getItemAndUnitAction","expenseUpdateAction","setExpenseIndex","setExpence_detail","setExpence_tag","setUnit_name","setUnitLable","setUnit_per_lable","setItemIndex","setQuantity","setExpence_ammount","getttingDataForEdit","setExpenseid","numbersRegex","separator","x","toLocaleString","maximumFractionDigits","DailyReportPrint","dailyReportPrintRef","projectNameForReportModal","expenseDetailForReport","total","totalExpenseData","expense","borderBottom","bill_no","Table","bordered","map","i","fontSize","expence_detail","expence_tag","quantity","unit_type","expence_ammount","lastCostUpTo","lastExpense","parseFloat","AddExpenseForm","expenseProjectId","addExpenseHandleClose","watch","expensePrintButtonRef","allItem","expenseData","setExpenseData","expenseDataForPrint","setExpenseDataForPrint","setBill_no","setUnit_type","setTotal","setLastExpense","totalForPrint","setTotalForPrint","existBillCheckBox","setExistBillCheckBox","itemIndex","unitPerQty","setUnitPerQty","unitLable","totalQty","setTotalQty","billNoGenerator","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","bill","formClear","document","getElementById","expenseSaveOnClick","user_id","rows","total_expence_amount","project_id","addExpenseAction","expenseArray","push","num","focus","Select","selectedIndex","item_name","unit_tables","unit_lable","unit_per_lable","unit_name","qty","multiply","totalQuantity","hover","totalVlue","splice","trigger","content","ExpenseModal","addExpenseModal","setAddExpenseModal","fullscreen","ProjectReportModalMainMenu","setUpdateComponentShow","setModalName","setDailyReportShow","setElementUsesReportShow","setSummeryReportShow","setDetailReportShow","DailyReportTop","DailyReportBillComponent","projectsForReport","setExpenseDetailForReport","setBillId","expences","DailyReportDetailComponent","billId","projectIdForReportModal","printBtnRef","sum","printOnClick","projectId","click","getLastExpenseForDailyReportAction","alert","borderLeft","borderRight","expense_write","UpdateExpenseComponent","updateComponentShow","expenseDataForEdit","expenseIndex","expenseId","billNo","getDailyExpenseForEditAction","billInfo","makingTotal","a","startDateYear","startDateMonth","startDateDay","totalExpense","expData","Updatedtotal","index","perQty","lableQty","expAmount","DetailReportPrint","detailReportPrintRef","detailReportStartDate","detailReportEndDate","expenseDetail","detailReportPrintData","expenses","lastExpenseDate","borderTop","dataIndex","dailyExp","rowSpan","expencesIndex","colSpan","DetailReportTable","pageStyle","DetailReportComponent","beginDate","month","formatedStartDate","endDte","eDate","eMonth","formatedEndDate","DetailReportComponentTop","detailReportShow","eYear","getExpenseForDetailReportAction","fromDate","toDate","ElementUsesTopComponent","ElementUsesTable","elementReportData","totalElementUses","setTotalElementUses","ElementUsesReportPrint","printRef","ElementUsesComponent","elementUsesReportShow","allElementData","setElementReportData","getElementUsesAction","usesData","ProjectReportModal","projectReportShow","setProjectReportShow","modalName","dailyReportShow","summeryReportShow","setDate","setDetailReportStartDate","setDetailReportEndDate","fromFormatedDate","toFormatedDate","getProjectForReportAction","fluid","minHeight","ProjectTableForExpense","setExpenseProjectId","setProjectName","setProjectIdForReportModal","setProjectNameForReportModal","getProjectForExpenseAction","projectReportModalHandleShow","TopComponentForExpense","ProjectExpenceComponent","ProjectExpensePage","AppRoute","path","element","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","devTools","reducer","login","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2b535534.chunk.js","sourcesContent":["export const authCheck = () =>{\r\n    try {\r\n        const allData = JSON.parse(localStorage.getItem(\"allData\"))\r\n        const decodedData = JSON.parse(localStorage.getItem(\"decodedData\"))\r\n        const permission = JSON.parse(localStorage.getItem(\"permission\"))\r\n        const token = localStorage.getItem(\"token\")\r\n\r\n        if (allData.length !=0 && decodedData.length != 0 && permission.length != 0){\r\n            const decodeId = decodedData.id\r\n            const decodeUserName = decodedData.userName\r\n            const allDataUserId = allData.decode.id\r\n            const allDataUserName = allData.decode.userName\r\n            const decodedFullName = decodedData.fullName\r\n            const allDataFullName = allData.decode.fullName\r\n            const decodedDesignation = decodedData.designation\r\n            const allDataDesignation = allData.decode.designation\r\n            if (decodeId == allDataUserId &&decodeUserName == allDataUserName && allDataFullName == decodedFullName && allDataDesignation == decodedDesignation){\r\n\r\n                const response = {\r\n                    token : token,\r\n                    id:allDataUserId,\r\n                    userName:allDataUserName,\r\n                    permission : JSON.stringify(permission),\r\n                    fullName:allDataFullName,\r\n                    designation :allDataDesignation\r\n                }\r\n                return response\r\n            }\r\n            else {\r\n               return false\r\n            }\r\n        }else {\r\n            return false\r\n        }\r\n    }catch (e) {\r\n        return false\r\n    }\r\n}","import React from 'react';\nimport {Link} from \"react-router-dom\"\nimport {authCheck} from \"../../AuthCheck/authCheck\";\n\nfunction SideMenu(props) {\n    const permission = authCheck().permission\n    return (\n        <>\n            <div className=\"leftside-menu\">\n                {/* LOGO */}\n                <Link to=\"/\" className=\"logo text-center logo-light\">\n                  <span className=\"logo-lg\">\n                   <h3 className=\"text-white mt-2\">C-App</h3>\n                  </span>\n                    <span className=\"logo-sm\">\n                    <h3 className=\"text-white mt-2\">C</h3>\n                  </span>\n                </Link>\n                {/* LOGO */}\n\n                <div className=\"h-100\" id=\"leftside-menu-container\" data-simplebar>\n                    {/*- Sidemenu */}\n                    <ul className=\"side-nav\">\n\n                        {/*<li className=\"side-nav-item\">*/}\n                        {/*    <a href=\"#\" className=\"side-nav-link py-1\">*/}\n                        {/*        <i className=\"fas fa-home\"></i>*/}\n                        {/*        <span>Dashboard </span>*/}\n                        {/*    </a>*/}\n                        {/*</li>*/}\n\n                        {permission&& JSON.parse(permission)[0].admin_read == \"1\" && <li className=\"side-nav-item\">\n                            <Link to=\"/projects\" className=\"side-nav-link py-1\">\n                                <i className=\"fas fa-tasks\"></i>\n                                <span>Projects </span>\n                            </Link>\n                        </li>\n                        }\n\n                        {permission&& JSON.parse(permission)[0].expense_read == \"1\" && <section>\n                            <li className=\"side-nav-title side-nav-item\">Expense</li>\n\n                            <li className=\"side-nav-item\">\n                                <Link to=\"/projectExpense\" className=\"side-nav-link py-1\">\n                                    <i className=\"fas fa-money-check-alt\"></i>\n                                    <span>Project expense </span>\n                                </Link>\n                            </li>\n\n                            {/*<li className=\"side-nav-item\">*/}\n                            {/*    <a href=\"#\" className=\"side-nav-link py-1\">*/}\n                            {/*        <i className=\"far fa-credit-card\"></i>*/}\n                            {/*        <span>General expense </span>*/}\n                            {/*    </a>*/}\n                            {/*</li>*/}\n                        </section>}\n\n\n                        {/*<li className=\"side-nav-item\">*/}\n                        {/*    <a data-bs-toggle=\"collapse\" href=\"#sidebarEcommerce\" aria-expanded=\"false\"*/}\n                        {/*       aria-controls=\"sidebarEcommerce\" className=\"py-1 side-nav-link\">*/}\n                        {/*        <i className=\"fas fa-warehouse\"></i>*/}\n                        {/*        <span> Store </span>*/}\n                        {/*        <span className=\"menu-arrow\">*/}\n                        {/*            <i className=\"fas fa-angle-right m-0\"></i>*/}\n                        {/*        </span>*/}\n                        {/*    </a>*/}\n                        {/*    <div className=\"collapse\" id=\"sidebarEcommerce\">*/}\n                        {/*        <ul className=\"side-nav-second-level\">*/}\n                        {/*            <li>*/}\n                        {/*                <a className=\"py-1\" href=\"#\">Purchase</a>*/}\n                        {/*            </li>*/}\n                        {/*            <li>*/}\n                        {/*                <a className=\"py-1\" href=\"#\">testing</a>*/}\n                        {/*            </li>*/}\n                        {/*            <li>*/}\n                        {/*                <a className=\"py-1\" href=\"#\">testing</a>*/}\n                        {/*            </li>*/}\n\n                        {/*        </ul>*/}\n                        {/*    </div>*/}\n                        {/*</li>*/}\n                    </ul>\n                    {/* Help Box */}\n                    <div className=\"help-box text-white text-center\">\n                        <h5 className=\"mt-3\">Welcome to C-App</h5>\n                        <p className=\"mb-3\">All right reserve muhammad sabbir 2021-22</p>\n                        {/*<a href=\"#\" className=\"btn btn-outline-light btn-sm\">Upgrade</a>*/}\n                    </div>\n                </div>\n                {/* Sidebar -left */}\n            </div>\n        </>\n    );\n}\n\nexport default SideMenu;","import React, {useEffect} from 'react';\nimport {authCheck} from \"../../AuthCheck/authCheck\";\nimport {useNavigate} from \"react-router-dom\";\n\nfunction CommonWrapper(props) {\n    const navigate = useNavigate()\n\n    useEffect(() => {\n        authCheck() == false && navigate(\"/login\")\n    }, [])\n    if (authCheck() != false) {\n        return (\n            <>\n                <div className=\"wrapper\">\n                    {props.children}\n                </div>\n            </>\n        );\n    } else {\n        return (\n            <>\n                {navigate(\"/login\")}\n                <div className=\"wrapper d-none\">\n                    {props.children}\n                </div>\n            </>\n        )\n    }\n}\n\nexport default CommonWrapper;","import { createSlice } from '@reduxjs/toolkit'\r\nexport const loginSlice = createSlice({\r\n    name:\"login\",\r\n    initialState:{\r\n        test:\"yes\"\r\n    },\r\n    reducers : {\r\n        test : (state, action)=>{\r\n            state.test = action.payload\r\n        }\r\n    }\r\n})","import { toast } from 'react-toastify';\r\nexport const errorToast = (message) =>{\r\n    toast.error(message, {\r\n        position: \"bottom-center\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n    });\r\n}","import React, {useEffect, useState} from 'react';\nimport {useDispatch} from \"react-redux\";\nimport {useNavigate} from \"react-router-dom\";\nimport {onLogoutAction} from \"../../Redux/Action/loginLogoutAction\";\nimport {authCheck} from \"../../AuthCheck/authCheck\";\n\nfunction TopNav(props) {\n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n    const [logoutStatus, setLogoutStatus] = useState(1)\n\n    useEffect(()=>{\n        logoutStatus == 0 && navigate(\"/login\")\n    },[logoutStatus])\n\n    const logoutOnClick = () =>{\n       dispatch( onLogoutAction(setLogoutStatus))\n    }\n    return (\n        <>\n            <div className=\"navbar-custom\">\n                {/*top menu use section*/}\n                <ul className=\"list-unstyled topbar-menu float-end mb-0\">\n                    <li className=\"dropdown notification-list\">\n                        {/*user section*/}\n                        <a className=\"nav-link  dropdown-toggle nav-user arrow-none me-0\" data-bs-toggle=\"dropdown\"\n                           href=\"#\" role=\"button\" aria-haspopup=\"false\" aria-expanded=\"false\">\n                          <span className=\"account-user-avatar\">\n                            <i className=\"fas fa-user\"></i>\n                          </span>\n                            <span className=\"\">\n                                <span className=\"account-user-name\">{authCheck()&&authCheck().fullName.slice(0,8)+\"..\"}</span>\n                                <span className=\"account-position\">{authCheck()&&authCheck().designation}</span>\n                            </span>\n                        </a>\n\n                        {/*user drop down*/}\n                        <div\n                            className=\"dropdown-menu dropdown-menu-end dropdown-menu-animated topbar-dropdown-menu profile-dropdown\">\n                            {/* item*/}\n                            <div className=\" dropdown-header noti-title\">\n                                <h6 className=\"text-overflow m-0\">Welcome to C-App</h6>\n                            </div>\n                            {/* item*/}\n                            {/*<a href=\"#\" className=\"dropdown-item notify-item\">*/}\n                            {/*    <i className=\"mdi mdi-account-circle me-1\"/>*/}\n                            {/*    <span>My Account</span>*/}\n                            {/*</a>*/}\n                            {/*/!* item*!/*/}\n                            {/*<a href=\"#\" className=\"dropdown-item notify-item\">*/}\n                            {/*    <i className=\"mdi mdi-account-edit me-1\"/>*/}\n                            {/*    <span>Settings</span>*/}\n                            {/*</a>*/}\n                            {/* item*/}\n                            <a onClick={e=>logoutOnClick()} href=\"#\" className=\"dropdown-item notify-item\">\n                                <i className=\"mdi mdi-logout me-1\"/>\n                                <span>Logout</span>\n                            </a>\n                        </div>\n                    </li>\n                </ul>\n\n                {/*menu indicator Bar*/}\n                <button className=\"menuBar button-menu-mobile open-left\">\n                    <i className=\" fas fa-bars\"></i>\n                </button>\n            </div>\n        </>\n    );\n}\n\nexport default TopNav;","import {loginSlice} from \"../Slice/loginSlice\";\r\nimport axios from \"axios\";\r\nimport {login} from \"../../AllRoute/APIRoute\"\r\nimport {errorToast} from \"../../utility/ErrorToast\";\r\n\r\nexport const onLoginAction = (payload) => dispatch => {\r\n    const {data, setLogStatus} = payload\r\n    axios.post(login, data).then(res => {\r\n        if (res.status == 200) {\r\n\r\n            const allData =localStorage.setItem(\"allData\", JSON.stringify(res.data))\r\n            const token = localStorage.setItem(\"token\", res.data.token)\r\n            const decodedData = localStorage.setItem(\"decodedData\", JSON.stringify(res.data.decode))\r\n            const permission = localStorage.setItem(\"permission\", JSON.stringify(res.data.permission))\r\n\r\n            //login status setting\r\n            setLogStatus(prevState=>prevState +1)\r\n            dispatch(loginSlice.actions.test(res.data))\r\n\r\n\r\n        } else {\r\n            errorToast(\"user not found !!\")\r\n        }\r\n    }).catch(err => {\r\n       try {\r\n           err.response.status == 404 &&  errorToast(\"user not found !!\")\r\n           console.log(err)\r\n       }catch (e) {\r\n           errorToast(\"some thing went wrong!!\")\r\n       }\r\n    })\r\n\r\n}\r\n\r\nexport const onLogoutAction = (setLogoutStatus)=> dispatch=>{\r\n    try {\r\n        localStorage.removeItem(\"allData\")\r\n        localStorage.removeItem(\"decodedData\")\r\n        localStorage.removeItem(\"permission\")\r\n        localStorage.removeItem(\"token\")\r\n        setLogoutStatus(0)\r\n    }catch (e) {\r\n\r\n    }\r\n}","import React from 'react';\n\nfunction TopNavAndAllWrapper(props) {\n    return (\n        <>\n            <div className=\"content-page\">\n                <div className=\"content\">\n                    {props.children}\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default TopNavAndAllWrapper;","export const removeLocalStorage = ()=>{\r\n    try {\r\n        localStorage.removeItem(\"allData\")\r\n        localStorage.removeItem(\"decodedData\")\r\n        localStorage.removeItem(\"permission\")\r\n        localStorage.removeItem(\"token\")\r\n    }catch (e) {\r\n\r\n    }\r\n}","import React, {useEffect} from 'react';\nimport SideMenu from \"../Components/NavMenu/SideMenu\";\nimport CommonWrapper from \"../Components/CommonWrapper/CommonWrapper\";\nimport TopNav from \"../Components/NavMenu/TopNav\";\nimport TopNavAndAllWrapper from \"../Components/CommonWrapper/TopNavAndAllWrapper\";\nimport Demo from \"../Components/Demo/Demo\";\nimport {authCheck} from \"../AuthCheck/authCheck\";\n\nfunction Dashboard(props) {\n\n\n    return (\n        <>\n            {/*All wrapper*/}\n            <CommonWrapper>\n                <SideMenu/>\n                {/*top nav and all page wrapper*/}\n                <TopNavAndAllWrapper>\n                    <TopNav/>\n                    <Demo/>\n                </TopNavAndAllWrapper>\n            </CommonWrapper>\n        </>\n    );\n}\n\nexport default Dashboard;","import React, {useEffect, useState} from 'react';\nimport {useForm} from \"react-hook-form\";\nimport {Button, Card, Col, Container, Form, Row} from \"react-bootstrap\";\n\nimport IconButton from '@material-ui/core/IconButton';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport TextField from \"@material-ui/core/TextField\";\nimport {useDispatch} from \"react-redux\";\nimport {onLoginAction} from \"../../Redux/Action/loginLogoutAction\";\nimport {useNavigate} from \"react-router-dom\";\nimport {authCheck} from \"../../AuthCheck/authCheck\";\nimport {ToastContainer, toast} from 'react-toastify';\n\n\n\nfunction LoginComponent(props) {\n    const navigate = useNavigate()\n    const {register, handleSubmit, reset, formState: {errors}} = useForm();\n    const [logStatus, setLogStatus] = useState(0)\n    const dispatch = useDispatch()\n    const [values, setValues] = React.useState({\n        amount: '',\n        showPassword: false,\n    });\n\n    useEffect(() => {\n        if (logStatus != 0) {\n\n            navigate(\"/\")\n        }\n    }, [logStatus])\n\n\n    //loginform on submit means login time\n    const onSubmit = (data, e) => {\n        // document.getElementById(\"loginForm\").reset()\n        const payload = {\n            data: data,\n            setLogStatus: setLogStatus\n        }\n        dispatch(onLoginAction(payload))\n        reset()\n        e.target.reset()\n    };\n\n\n    const handleClickShowPassword = () => {\n        setValues({...values, showPassword: !values.showPassword});\n    };\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n    return (\n        <>\n            <Container>\n                <Row className=\"d-flex align-items-center justify-content-center\">\n                    <Card className=\"mt-md-5 pt-md-5 mt-2\">\n                        <Row className=\"d-flex align-items-center\">\n                            <Col lg={6} md={6} sm={12} xs={12}>\n                                <div className=\"pt-3 px-lg-3 mx-lg-3 pb-1 text-center\">\n                                    <h4 className=\"text-center text-dark\">Welcome</h4>\n                                    <i className=\"text-center fa-2x text-dark fas fa-user-lock\"></i>\n\n                                    <Form id=\"loginForm\" className=\"mx-4 mt-3 \" onSubmit={handleSubmit(onSubmit)}>\n                                        <FormControl className=\"w-100\">\n                                            <TextField\n                                                label=\"User name\"\n                                                className=\"w-100\"\n                                                id=\"standard-size-small\"\n                                                size=\"small\"\n                                                {...register(\"userName\", {\n                                                    required: true,\n                                                    minLength: 3,\n                                                    maxLength: 16\n                                                })}\n                                            />\n                                            {errors.userName && <span className=\"text-danger\">\n                                        {errors.userName.type == \"required\" && <span>user name required</span>}\n                                                {errors.userName.type == \"minLength\" &&\n                                                <span>user name at least 3 char.</span>}\n                                                {errors.userName.type == \"maxLength\" &&\n                                                <span>user name maximum 16 char.</span>}\n                                    </span>}\n                                        </FormControl>\n\n                                        <FormControl className=\"w-100 mt-2\">\n                                            <InputLabel htmlFor=\"standard-adornment-password\">Password</InputLabel>\n                                            <Input\n                                                className=\"w-100\"\n                                                id=\"standard-adornment-password\"\n                                                type={values.showPassword ? 'text' : 'password'}\n                                                endAdornment={\n                                                    <InputAdornment position=\"end\">\n                                                        <IconButton\n                                                            aria-label=\"toggle password visibility\"\n                                                            onClick={handleClickShowPassword}\n                                                            onMouseDown={handleMouseDownPassword}\n                                                        >\n                                                            {values.showPassword ? <Visibility/> : <VisibilityOff/>}\n                                                        </IconButton>\n                                                    </InputAdornment>\n                                                }\n                                                {...register(\"password\", {\n                                                    required: true,\n                                                    minLength: 6\n                                                })}\n                                            />\n\n                                            {errors.password && <span className=\"text-danger\">\n                                        {errors.password.type == \"required\" && <span>password required</span>}\n                                                {errors.password.type == \"minLength\" &&\n                                                <span>password at least 6 char.</span>}\n                                    </span>}\n                                        </FormControl>\n\n                                        <Button variant=\"primary\" className=\"mt-3 w-100\" type=\"submit\">\n                                            Login\n                                        </Button>\n                                        <p className=\"text-dark text-center mt-5\">please login for getting service</p>\n                                    </Form>\n                                </div>\n                            </Col>\n\n                            <Col lg={6} md={6} sm={12} xs={12}>\n                                <div className=\"pt-3 pb-1 text-center\">\n                                    <h4 className=\"text-center text-dark\">How to use</h4>\n                                    {/*<iframe src=\"https://drive.google.com/file/d/1RZQVxNlZtGGP5bV-mkJcIrY7vpyzlXcY/view?usp=sharing\" width=\"600\" height=\"480\"></iframe>*/}\n\n                                    <iframe allowFullScreen={true} style={{border:\"1px solid\"}} src=\"https://drive.google.com/file/d/1zFxWbL-RAIXzSxq571GS2gQA4BfotBpr/preview\" width=\"100%\" height=\"380\" allow=\"autoplay\"></iframe>\n\n                                </div>\n                            </Col>\n                        </Row>\n\n\n                    </Card>\n                </Row>\n                <ToastContainer/>\n            </Container>\n        </>\n    );\n}\n\nexport default LoginComponent;","const baseUrl = \"https://constructionapi.sabbirinfo.com/\"\r\n\r\nexport const login = baseUrl + \"login\"\r\nexport const blank = baseUrl + \"blank\"\r\nexport const getAllProject = baseUrl + \"getAllProject\"\r\nexport const addProject = baseUrl + \"addProject\"\r\nexport const getSingleProjectForUpdate = baseUrl + \"getSingleProjectForUpdate\"\r\nexport const updateProject = baseUrl + \"updateProject\"\r\nexport const getProjectsForExpense = baseUrl + \"getProjectsForExpense\"\r\nexport const getItemAndUnit = baseUrl + \"getItemAndUnit\"\r\nexport const addExpense = baseUrl + \"addExpense\"\r\nexport const getTotalExpense = baseUrl + \"getTotalExpense\"\r\nexport const getDailyExpense = baseUrl + \"getDailyExpense\"\r\nexport const getDailyExpenseForEdit = baseUrl + \"getDailyExpenseForEdit\"\r\nexport const expenseUpdate = baseUrl + \"expenseUpdate\"\r\nexport const getLastExpenseForDailyReport = baseUrl + \"getLastExpenseForDailyReport\"\r\nexport const getExpenseForDetailReport = baseUrl + \"getExpenseForDetailReport\"\r\nexport const getElementUses = baseUrl + \"getElementUses\"","import React, {useEffect} from 'react';\nimport LoginComponent from \"../Components/LoginComponent/LoginComponent\";\nimport {authCheck} from \"../AuthCheck/authCheck\";\nimport {useNavigate} from \"react-router-dom\";\n\nfunction LoginPage(props) {\n    const navigate = useNavigate()\n    useEffect(()=>{\n        authCheck() != false && navigate(\"/\")\n    },[])\n\n    if (authCheck() == false){\n        return (\n            <>\n                <LoginComponent/>\n            </>\n        );\n    }else {\n        return (\n            <>{navigate(\"/\")}</>\n        )\n    }\n}\n\nexport default LoginPage;","import {createSlice} from '@reduxjs/toolkit'\r\n\r\nexport const projectSlice = createSlice({\r\n    name: \"projects\",\r\n    initialState: {\r\n        allProjectData: [],\r\n        singleProjectData:false\r\n    },\r\n    reducers: {\r\n        AllProject: (state, action) => {\r\n            state.allProjectData = action.payload\r\n        },\r\n        singleProject:(state, action)=>{\r\n            state.singleProjectData = action.payload\r\n        }\r\n    }\r\n})","import { toast } from 'react-toastify';\r\nexport const successToast = (message) =>{\r\n    toast.success(message, {\r\n        position: \"bottom-center\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n    });\r\n}","import axios from \"axios\";\r\nimport {addProject, getAllProject, getSingleProjectForUpdate, updateProject} from \"../../AllRoute/APIRoute\";\r\nimport {authCheck} from \"../../AuthCheck/authCheck\";\r\nimport {projectSlice} from \"../Slice/projectSlice\";\r\nimport {errorToast} from \"../../utility/ErrorToast\";\r\nimport {successToast} from \"../../utility/SuccessToast\";\r\n\r\n// all project getting\r\nexport const getAllProjectAction = (payload) => dispatch => {\r\n    payload && payload.setLoader(true)\r\n    const headers = authCheck()\r\n    axios.get(getAllProject, {headers}).then(res => {\r\n       if (res.data != false){\r\n           dispatch(projectSlice.actions.AllProject(res.data))\r\n           payload && payload.setLoader(false)\r\n       }else {\r\n           payload && payload.setLoader(false)\r\n           errorToast(\"No data found\")\r\n       }\r\n    }).catch(err => {\r\n        try {\r\n            console.log(err)\r\n            payload && payload.setLoader(false)\r\n            err.response.status == 401 && payload && payload.setLogStatus(false)\r\n            errorToast(\"something went wrong\")\r\n        } catch (e) {\r\n            payload.setLoader && payload.setLoader(false)\r\n            errorToast(\"something went wrong\")\r\n            console.log(err)\r\n        }\r\n    })\r\n}\r\n\r\n\r\n//project add\r\nexport const addProjectAction = (payload)=>dispatch=>{\r\n    const {data,reset,saveBtnRef,addModalHandleClose, setLogStatus} = payload\r\n    const headers = authCheck()\r\n\r\n    saveBtnRef.current.disabled = true\r\n    setTimeout(()=>{\r\n        axios.post(addProject, data, {headers}).then(res=>{\r\n            if (res.status == 200){\r\n                saveBtnRef.current.disabled = false\r\n                reset()\r\n                dispatch(getAllProjectAction())\r\n                addModalHandleClose()\r\n                successToast(\"project saved successfully\")\r\n            }else {\r\n                saveBtnRef.current.disabled = false\r\n                errorToast(\"project saved failed\")\r\n            }\r\n        }).catch(err=>{\r\n            try {\r\n                err.response.status == 401 && setLogStatus(false)\r\n                saveBtnRef.current.disabled = false\r\n                console.log(err)\r\n                errorToast(\"something went wrong\")\r\n            }catch (e) {\r\n                console.log(err)\r\n                saveBtnRef.current.disabled = false\r\n                errorToast(\"something went wrong\")\r\n            }\r\n        })\r\n    },0)\r\n}\r\n\r\n//get single project for update\r\nexport const getSingleProjectForUpdateAction = (payload)=>dispatch=>{\r\n    const headers = authCheck()\r\n    axios.post(getSingleProjectForUpdate, {id:payload.id},{headers}).then(res=>{\r\n        if (res.status == 200){\r\n            setTimeout(()=>{\r\n                dispatch(projectSlice.actions.singleProject(res.data))\r\n            },0)\r\n        }else {\r\n            errorToast(\"something went wrong\")\r\n        }\r\n    }).catch(err=>{\r\n        try {\r\n            err.response.status == 401 && payload.setLogStatus(false)\r\n        }catch (e) {\r\n            errorToast(\"something went wrong\")\r\n        }\r\n    })\r\n}\r\n\r\n\r\n// project update\r\nexport const projectUpdateAction = (payload)=>dispatch=>{\r\n    const {data, reset,updateModalHandleClose,setLogStatus,updateFormRef, saveBtnRef}= payload\r\n    const headers = authCheck()\r\n\r\n    saveBtnRef.current.disabled = true\r\n\r\n    axios.post(updateProject, data, {headers}).then(res=>{\r\n        if (res.status == 200 && res.data == \"1\"){\r\n            saveBtnRef.current.disabled = false\r\n            dispatch(getAllProjectAction())\r\n            reset()\r\n            updateModalHandleClose()\r\n            setTimeout(()=>{\r\n                dispatch(projectSlice.actions.singleProject(false))\r\n            },200)\r\n            successToast(\"updated successfully\")\r\n        }else {\r\n            saveBtnRef.current.disabled = false\r\n        }\r\n    }).catch(err=>{\r\n        try {\r\n            err.response.status == 401 && setLogStatus(false)\r\n            saveBtnRef.current.disabled = false\r\n            errorToast(\"something went wrong\")\r\n        }catch (e) {\r\n            reset()\r\n            updateModalHandleClose()\r\n            setTimeout(()=>{\r\n                dispatch(projectSlice.actions.singleProject(false))\r\n            },200)\r\n            saveBtnRef.current.disabled = false\r\n            errorToast(\"something went wrong\")\r\n        }\r\n    })\r\n}","import React, {forwardRef, memo, useEffect, useRef, useState} from 'react';\r\nimport {Button, Col, Form, Modal, Row} from \"react-bootstrap\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {addProjectAction, getAllProjectAction} from \"../../../Redux/Action/ProjectAction\";\r\nimport {removeLocalStorage} from \"../../../utility/RemoveLocalStorage\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {ToastContainer} from \"react-toastify\";\r\n\r\nfunction ProjectAddModal({addModalStatus = false, setAddModalStatus}) {\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n\r\n    const [logStatus, setLogStatus] =useState(true)\r\n    const [startDate, setStartDate] = useState(new Date());\r\n    const [endDate, setEndDate] = useState(new Date());\r\n    const saveBtnRef = useRef()\r\n    const { register, handleSubmit, reset, formState: { errors } } = useForm();\r\n\r\n    const addModalHandleClose = () => setAddModalStatus(false);\r\n\r\n    const onSubmit = data => {\r\n\r\n        var startDateYear = startDate.getUTCFullYear()\r\n        var startDateMonth = startDate.getUTCMonth()+1\r\n        var startDateDay  = startDate.getUTCDate()\r\n        let startFormatedDate = startDateYear+\"-\"+startDateMonth+\"-\"+startDateDay\r\n\r\n        var endDateYear = endDate.getUTCFullYear()\r\n        var endDateMonth = endDate.getUTCMonth()+1\r\n        var endDateDay = endDate.getUTCDate()\r\n        let endFormatedDate = endDateYear+\"-\"+endDateMonth+\"-\"+endDateDay\r\n\r\n        const allData = {...data, startDate:startFormatedDate, endDate:endFormatedDate}\r\n        console.log(allData)\r\n        const payload = {\r\n            data:allData,\r\n            reset:reset,\r\n            saveBtnRef:saveBtnRef,\r\n            addModalHandleClose:addModalHandleClose,\r\n            setLogStatus:setLogStatus\r\n        }\r\n        dispatch(addProjectAction(payload))\r\n\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if (logStatus ==false){\r\n            removeLocalStorage()\r\n            navigate(\"/login\")\r\n        }\r\n    },[logStatus])\r\n\r\n    // for start date\r\n    const ExampleCustomInput = forwardRef(({ value, onClick }, ref) => (\r\n        <button className=\"example-custom-input bg-transparent\" onClick={onClick} ref={ref}>\r\n            <i className=\"text-primary far fa-calendar-alt me-1\"></i>\r\n            <span className=\"dateString\">{value}</span>\r\n        </button>\r\n    ));\r\n    //for end date\r\n    const ExampleCustomInputForEnd = forwardRef(({ value, onClick }, ref) => (\r\n        <button className=\"example-custom-input bg-transparent\" onClick={onClick} ref={ref}>\r\n            <i className=\"text-primary far fa-calendar-alt me-1\"></i>\r\n            <span className=\"dateString\">{value}</span>\r\n        </button>\r\n    ));\r\n\r\n    return (\r\n        <>\r\n            <Modal size=\"lg\" show={addModalStatus} onHide={addModalHandleClose}>\r\n                <Modal.Header  closeButton>\r\n                    <Modal.Title className=\"py-0 my-0\">Project Add</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body clssName=\"projectAddModalBody\">\r\n                    <div className=\"projectAddModalBodyWrapper\">\r\n                        <Col lg={12} md={12} sm={12} className=\"mt-3 d-flex \">\r\n                            <Form.Group className=\"  d-flex \" controlId=\"projectName\">\r\n                                <Form.Label className=\"dateLable\">Start Date :</Form.Label>\r\n                                <DatePicker\r\n                                    selected={startDate}\r\n                                    onChange={(date) => setStartDate(date)}\r\n                                    dateFormat=\"yyyy-MMMM-dd\"\r\n                                    customInput={<ExampleCustomInput />}\r\n                                />\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col lg={12} md={12} sm={12} className=\"d-flex \">\r\n                            <Form.Group className=\" d-flex \" controlId=\"projectName\">\r\n                                <Form.Label className=\"dateLable\">End Date &nbsp;:</Form.Label>\r\n                                <DatePicker\r\n                                    selected={endDate}\r\n                                    onChange={(date) => setEndDate(date)}\r\n                                    dateFormat=\"yyyy-MMMM-dd\"\r\n                                    customInput={<ExampleCustomInputForEnd />}\r\n                                />\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <hr/>\r\n\r\n                        <Form  onSubmit={handleSubmit(onSubmit)}>\r\n                            <Row className=\"mb-3\">\r\n                                <Col lg={12} md={12} sm={12} xs={12} className=\"mb-2\">\r\n                                    <Form.Group controlId=\"projectName\">\r\n                                        <Form.Label>Project Name</Form.Label>\r\n                                        <Form.Control {...register(\"projectName\" ,{required: true })} type=\"text\" placeholder=\"Enter Project Name\"/>\r\n                                        {errors.projectName && <span className=\"text-danger\">This field is required</span>}\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col lg={6} md={6} sm={6} xs={12} className=\"mb-2\">\r\n                                    <Form.Group controlId=\"projectName\">\r\n                                        <Form.Label>Owner Name</Form.Label>\r\n                                        <Form.Control {...register(\"ownerName\" )} defaultValue=\"N/A\" type=\"text\" placeholder=\"Enter Owner Name\"/>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col lg={6} md={6} sm={6} xs={12} className=\"mb-2\">\r\n                                    <Form.Group controlId=\"projectName\">\r\n                                        <Form.Label>Owner Phone</Form.Label>\r\n                                        <Form.Control {...register(\"ownerPhn\" )} defaultValue=\"N/A\" type=\"text\" placeholder=\"Enter Owner Phone No.\"/>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col lg={6} md={6} sm={6} xs={12} className=\"mb-2\">\r\n                                    <Form.Group controlId=\"projectName\">\r\n                                        <Form.Label>Project Location</Form.Label>\r\n                                        <Form.Control {...register(\"projectLocation\" )} defaultValue=\"N/A\" type=\"text\" placeholder=\"Enter Project Location\"/>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col lg={6} md={6} sm={6} xs={12} className=\"mb-2\">\r\n                                    <Form.Group controlId=\"projectName\">\r\n                                        <Form.Label>Project Amount</Form.Label>\r\n                                        <Form.Control {...register(\"projectAmmount\" )} defaultValue=\"N/A\" type=\"text\" placeholder=\"Enter Project Amount\"/>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n                            <Modal.Footer>\r\n                                <Button ref={saveBtnRef} variant=\"primary\" type=\"submit\">\r\n                                    Save\r\n                                </Button>\r\n                            </Modal.Footer>\r\n\r\n                        </Form>\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default memo(ProjectAddModal);","import React, {memo, useState} from 'react';\r\nimport {Button, Container} from \"react-bootstrap\";\r\nimport ProjectAddModal from \"./ProjectAddModal\";\r\nimport {authCheck} from \"../../../AuthCheck/authCheck\";\r\n\r\nfunction ComponentTop(props) {\r\n    const permission = authCheck().permission\r\n    const [addModalStatus, setAddModalStatus] = useState(false)\r\n\r\n\r\n    const addModalHandleShow = () => setAddModalStatus(true);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"d-flex justify-content-between align-items-center pt-2\">\r\n                <div>\r\n                    <h5><i className=\"fas fa-home\"></i> Home / Projects</h5>\r\n                </div>\r\n                {\r\n                    permission && JSON.parse(permission)[0].admin_write == \"1\" ?<Button\r\n                        onClick={e=>addModalHandleShow()}\r\n                        className=\"btn-primary btn-sm \">\r\n                        Project +\r\n                    </Button> : <Button\r\n                        className=\"btn-primary btn-sm disabled\">\r\n                        Project +\r\n                    </Button>\r\n                }\r\n\r\n            </div>\r\n            <hr/>\r\n\r\n\r\n            {/*add project modal*/}\r\n            <ProjectAddModal addModalStatus={addModalStatus} setAddModalStatus={setAddModalStatus}/>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default memo(ComponentTop);","export default __webpack_public_path__ + \"static/media/loader.981b6ddf.svg\";","import React from 'react';\r\nimport loaderImg from '../../Assets/svg/loader.svg'\r\nimport {Row} from \"react-bootstrap\";\r\n\r\nfunction LoaderComponent({loader=false}) {\r\n    return (\r\n        <>\r\n            <Row className={loader==true?\"d-flex justify-content-center\":\"d-none\"}>\r\n                <img className=\"loaderAnimation\" src={loaderImg}/>\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LoaderComponent;","import React, {forwardRef, useEffect, useRef, useState} from 'react';\r\nimport {Button, Col, Form, Modal, Row} from \"react-bootstrap\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {addProjectAction, projectUpdateAction} from \"../../../Redux/Action/ProjectAction\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {projectSlice} from \"../../../Redux/Slice/projectSlice\";\r\nimport LoaderComponent from \"../../LoaderComponent/LoaderComponent\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {removeLocalStorage} from \"../../../utility/RemoveLocalStorage\";\r\n\r\nfunction ProjectUpdateModal({updateModalShow = false, setUpdateModalShow}) {\r\n    const {register, handleSubmit, reset, formState: {errors}} = useForm();\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n\r\n    // project single data getting from redux slice\r\n    let projectSingleData = useSelector(state => state.projects.singleProjectData)\r\n\r\n    // all state declear from heare\r\n    const [startDate, setStartDate] = useState();\r\n    const [endDate, setEndDate] = useState();\r\n    const [loader, setLoader] = useState(true)\r\n    const [logStatus, setLogStatus] = useState(true)\r\n    const [status, setStatus] = useState()\r\n\r\n    // all ref decleare from here\r\n    const saveBtnRef = useRef()\r\n    const updateFormRef = useRef()\r\n\r\n\r\n    useEffect(() => {\r\n        //if project data initialized from db\r\n        if (projectSingleData != false) {\r\n            // reset form and hook form before setting data in input\r\n            reset()\r\n            updateFormRef.current && updateFormRef.current.reset()\r\n\r\n            //setting date from db\r\n            const tartDateFromDB = projectSingleData.start_date\r\n            setStartDate(new Date(tartDateFromDB))\r\n            const endDateFromDB = projectSingleData.deadline\r\n            setEndDate(new Date(endDateFromDB))\r\n\r\n            //setting project status\r\n            setStatus(projectSingleData.status)\r\n            setLoader(false)\r\n        } else {\r\n            setLoader(true)\r\n        }\r\n\r\n    }, [projectSingleData])\r\n\r\n\r\n    //auth check lificycle\r\n    useEffect(() => {\r\n        if (logStatus == false) {\r\n            removeLocalStorage()\r\n            navigate(\"/login\")\r\n        }\r\n    }, [logStatus])\r\n\r\n\r\n    //update modal handle close\r\n    const updateModalHandleClose = () => {\r\n        setUpdateModalShow(false)\r\n\r\n        // for reset the slice, it the time of modal close\r\n        setTimeout(() => {\r\n            dispatch(projectSlice.actions.singleProject(false))\r\n        }, 200)\r\n\r\n    }\r\n\r\n    // when update submit\r\n    const onSubmit = data => {\r\n        // taking date particulerly\r\n        var startDateYear = startDate.getUTCFullYear()\r\n        var startDateMonth = startDate.getUTCMonth() + 1\r\n        var startDateDay = startDate.getUTCDate()\r\n        let startFormatedDate = startDateYear + \"-\" + startDateMonth + \"-\" + startDateDay\r\n\r\n        // setting date particularly for db\r\n        var endDateYear = endDate.getUTCFullYear()\r\n        var endDateMonth = endDate.getUTCMonth() + 1\r\n        var endDateDay = endDate.getUTCDate()\r\n        let endFormatedDate = endDateYear + \"-\" + endDateMonth + \"-\" + endDateDay\r\n\r\n        const allData = {...data, startDate: startFormatedDate, endDate: endFormatedDate, id: projectSingleData.id, status:status}\r\n\r\n        const payload = {\r\n            data: allData,\r\n            reset: reset,\r\n            saveBtnRef: saveBtnRef,\r\n            updateFormRef: updateFormRef,\r\n            updateModalHandleClose: updateModalHandleClose,\r\n            setLogStatus: setLogStatus\r\n        }\r\n        dispatch(projectUpdateAction(payload))\r\n    }\r\n\r\n\r\n    // for start date button\r\n    const ExampleCustomInput = forwardRef(({value, onClick}, ref) => (\r\n        <button className=\"example-custom-input bg-transparent\" onClick={onClick} ref={ref}>\r\n            <i className=\"text-primary far fa-calendar-alt me-1\"></i>\r\n            <span className=\"dateString\">{value}</span>\r\n        </button>\r\n    ));\r\n    //for end date button\r\n    const ExampleCustomInputForEnd = forwardRef(({value, onClick}, ref) => (\r\n        <button className=\"example-custom-input bg-transparent\" onClick={onClick} ref={ref}>\r\n            <i className=\"text-primary far fa-calendar-alt me-1\"></i>\r\n            <span className=\"dateString\">{value}</span>\r\n        </button>\r\n    ));\r\n\r\n    return (\r\n        <>\r\n\r\n            <Modal size=\"lg\" show={updateModalShow} onHide={updateModalHandleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title className=\"py-0 my-0\">Project Update</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body clssName=\"projectAddModalBody\">\r\n                    <div className=\"projectAddModalBodyWrapper\">\r\n\r\n                        {/*checking project data initialized or not from db*/}\r\n                        {projectSingleData != false && <div>\r\n\r\n                            {/*first two column for maintaining date field*/}\r\n                            <Col lg={12} md={12} sm={12} className=\"d-flex \">\r\n                                <Form.Group className=\"  d-flex \" controlId=\"projectName\">\r\n                                    <Form.Label className=\"dateLable\">Start Date :</Form.Label>\r\n                                    <DatePicker\r\n                                        selected={startDate}\r\n                                        onChange={(date) => setStartDate(date)}\r\n                                        dateFormat=\"yyyy-MMMM-dd\"\r\n                                        customInput={<ExampleCustomInput/>}\r\n                                    />\r\n                                </Form.Group>\r\n                            </Col>\r\n                            <Col lg={12} md={12} sm={12} className=\"d-flex \">\r\n                                <Form.Group className=\" d-flex \" controlId=\"projectName\">\r\n                                    <Form.Label className=\"dateLable\">End Date &nbsp;:</Form.Label>\r\n                                    <DatePicker\r\n                                        selected={endDate}\r\n                                        onChange={(date) => setEndDate(date)}\r\n                                        dateFormat=\"yyyy-MMMM-dd\"\r\n                                        customInput={<ExampleCustomInputForEnd/>}\r\n                                    />\r\n                                </Form.Group>\r\n                            </Col>\r\n                            <hr/>\r\n\r\n                            {/*form start from here*/}\r\n                            <Form id=\"updateForm\" ref={updateFormRef} onSubmit={handleSubmit(onSubmit)}>\r\n                                <Row className=\"mb-3\">\r\n                                    <Col lg={12} md={12} sm={12} xs={12} className=\"mb-2\">\r\n                                        <Form.Group controlId=\"projectName\">\r\n                                            <Form.Label>Project Name</Form.Label>\r\n                                            <Form.Control\r\n                                                defaultValue={projectSingleData.project_name} {...register(\"projectName\", {required: true})}\r\n                                                type=\"text\" placeholder=\"Enter Project Name\"/>\r\n                                            {errors.projectName &&\r\n                                            <span className=\"text-danger\">This field is required</span>}\r\n                                        </Form.Group>\r\n                                    </Col>\r\n\r\n                                    <Col lg={6} md={6} sm={6} xs={12} className=\"mb-2\">\r\n                                        <Form.Group controlId=\"projectName\">\r\n                                            <Form.Label>Owner Name</Form.Label>\r\n                                            <Form.Control\r\n                                                defaultValue={projectSingleData.owner_name} {...register(\"ownerName\")}\r\n                                                type=\"text\"\r\n                                                placeholder=\"Enter Owner Name\"/>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n\r\n                                    <Col lg={6} md={6} sm={6} xs={12} className=\"mb-2\">\r\n                                        <Form.Group controlId=\"projectName\">\r\n                                            <Form.Label>Owner Phone</Form.Label>\r\n                                            <Form.Control\r\n                                                defaultValue={projectSingleData.owner_phn} {...register(\"ownerPhn\")}\r\n                                                type=\"text\"\r\n                                                placeholder=\"Enter Owner Phone No.\"/>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col lg={6} md={6} sm={6} xs={12} className=\"mb-2\">\r\n                                        <Form.Group controlId=\"projectName\">\r\n                                            <Form.Label>Project Location</Form.Label>\r\n                                            <Form.Control\r\n                                                defaultValue={projectSingleData.project_location} {...register(\"projectLocation\")}\r\n                                                type=\"text\" placeholder=\"Enter Project Location\"/>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col lg={6} md={6} sm={6} xs={12} className=\"mb-2\">\r\n                                        <Form.Group controlId=\"projectName\">\r\n                                            <Form.Label>Project Amount</Form.Label>\r\n                                            <Form.Control\r\n                                                defaultValue={projectSingleData.project_ammount} {...register(\"projectAmmount\")}\r\n                                                type=\"text\"\r\n                                                placeholder=\"Enter Project Amount\"/>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col lg={6} md={6} sm={6} xs={12} className=\"mb-2\">\r\n                                        <Form.Group as={Row} className=\"mb-3\">\r\n                                            <Form.Label as=\"legend\" column sm={2}>\r\n                                                Radios\r\n                                            </Form.Label>\r\n                                            <Col sm={10} className=\"mt-2\">\r\n                                                <Form.Check\r\n                                                    onChange={e=>{setStatus(e.target.getAttribute(\"data-status\"))}}\r\n                                                    checked={status == \"1\" ? true : false}\r\n                                                    data-status=\"1\"\r\n                                                    type=\"radio\"\r\n                                                    label=\"Pending\"\r\n                                                    name=\"formHorizontalRadios\"\r\n                                                    id=\"formHorizontalRadios1\"\r\n                                                />\r\n                                                <Form.Check\r\n                                                    onChange={e=>{setStatus(e.target.getAttribute(\"data-status\"))}}\r\n                                                    checked={status == \"0\" ? true : false}\r\n                                                    data-status=\"0\"\r\n                                                    type=\"radio\"\r\n                                                    label=\"Finished\"\r\n                                                    name=\"formHorizontalRadios\"\r\n                                                    id=\"formHorizontalRadios2\"\r\n                                                />\r\n                                                <Form.Check\r\n                                                    onChange={e=>{setStatus(e.target.getAttribute(\"data-status\"))}}\r\n                                                    checked={status != \"1\" && status != \"0\" ? true : false}\r\n                                                    data-status=\"\"\r\n                                                    type=\"radio\"\r\n                                                    label=\"Deni\"\r\n                                                    name=\"formHorizontalRadios\"\r\n                                                    id=\"formHorizontalRadios3\"\r\n                                                />\r\n                                            </Col>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Modal.Footer>\r\n                                    <Button ref={saveBtnRef} variant=\"primary\" type=\"submit\">\r\n                                        update\r\n                                    </Button>\r\n                                </Modal.Footer>\r\n\r\n                            </Form>\r\n                        </div>}\r\n\r\n\r\n                        {/*loading component*/}\r\n                        <LoaderComponent loader={loader}/>\r\n                    </div>\r\n                </Modal.Body>\r\n\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ProjectUpdateModal;","import React, {memo, useEffect, useState} from 'react';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport {Button, Container} from \"react-bootstrap\";\r\nimport {getAllProjectAction, getSingleProjectForUpdateAction} from \"../../../Redux/Action/ProjectAction\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {authCheck} from \"../../../AuthCheck/authCheck\";\r\nimport {removeLocalStorage} from \"../../../utility/RemoveLocalStorage\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport LoaderComponent from \"../../LoaderComponent/LoaderComponent\";\r\nimport {ToastContainer} from \"react-toastify\";\r\nimport ProjectUpdateModal from \"./ProjectUpdateModal\";\r\nimport {projectSlice} from \"../../../Redux/Slice/projectSlice\";\r\n\r\nfunction ProjectTable(props) {\r\n    const navigate = useNavigate()\r\n    const permission = authCheck().permission\r\n    const dispatch = useDispatch()\r\n    const tableData = useSelector(state => state.projects.allProjectData)\r\n\r\n    // all state here\r\n    const [updateModalShow, setUpdateModalShow] = useState(false);\r\n    const [logStatus, setLogStatus] = useState(true)\r\n    const [loader, setLoader] = useState(false)\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        // chekcing authentin or not\r\n        if (logStatus ==false){\r\n            removeLocalStorage()\r\n            navigate(\"/login\")\r\n        }\r\n\r\n        // get all project for table\r\n        const payload = {\r\n            setLogStatus:setLogStatus,\r\n            setLoader:setLoader\r\n        }\r\n        dispatch(getAllProjectAction(payload))\r\n\r\n    },[logStatus])\r\n\r\n    // update modal show handaller\r\n    const updateModalHandleShow = (id) => {\r\n        const payload = {\r\n            id:id,\r\n            loader:\"setLoader\",\r\n            setLogStatus:setLogStatus\r\n        }\r\n        dispatch(getSingleProjectForUpdateAction(payload))\r\n        setUpdateModalShow(true)\r\n    }\r\n\r\n\r\n    // table columnh initialize\r\n    const products = tableData;\r\n    const columns = [{\r\n        dataField: 'id',\r\n        text: '#',\r\n        headerStyle: (colum, colIndex) => {\r\n            return { width: '80px', height:\"30px\", textAlign: 'center' };\r\n        },\r\n        style: (colum, colIndex) => {\r\n            return {textAlign: 'center',  padding:\"7px 0\" };\r\n        }\r\n    }, {\r\n        dataField: 'project_name',\r\n        text: 'Project Name',\r\n        headerStyle: (colum, colIndex) => {\r\n            return {textAlign: 'center' };\r\n        },\r\n        style: (colum, colIndex) => {\r\n            return {  padding:\"7px 3px\" };\r\n        }\r\n    }, {\r\n        dataField: 'total_expence',\r\n        text: 'total expence',\r\n        headerStyle: (colum, colIndex) => {\r\n            return {textAlign: 'center', width:\"180px\" };\r\n        },\r\n        style: (colum, colIndex) => {\r\n            return {textAlign: 'right', padding:\"7px 3px\" };\r\n        }\r\n    },{\r\n        dataField: 'start_date',\r\n        text: 'start date',\r\n        headerStyle: (colum, colIndex) => {\r\n            return {textAlign: 'center', width:\"100px\" };\r\n        },\r\n        style: (colum, colIndex) => {\r\n            return {textAlign: 'center' , padding:\"7px 0\" };\r\n        }\r\n    },{\r\n        dataField: 'status',\r\n        text: 'status',\r\n        headerStyle: (colum, colIndex) => {\r\n            return {textAlign: 'center', width:\"80px\" };\r\n        },\r\n        style: (colum, colIndex) => {\r\n            return {textAlign: 'center' , padding:\"7px 0\" };\r\n        },\r\n        formatter:(cell, row)=>{\r\n            return <section>\r\n                {cell==\"1\" ?  <span className=\"bg-warning text-white\">pendibg</span>:cell==\"0\"?\r\n                    <span className=\"bg-success text-white\">finished</span>:\r\n                    <span className=\"bg-danger text-white\">deni</span>}\r\n            </section>\r\n        }\r\n\r\n    },{\r\n        dataField: \"i\",\r\n        text: 'view',\r\n        headerStyle: (colum, colIndex) => {\r\n            return {textAlign: 'center', width:\"80px\" };\r\n        },\r\n        style: (colum, colIndex) => {\r\n            return {textAlign: 'center' ,padding:\"7px 0\" };\r\n        },\r\n        formatter:(cell, row, rowIndex, columnsIndex)=>{\r\n            return <>\r\n                <i style={{cursor:\"pointer\"}} className=\"text-primary fas fa-eye\"></i>\r\n                {row.id}\r\n            </>\r\n        }\r\n    },{\r\n        dataField: 'Action',\r\n        isDummyField: true,\r\n        text: 'Action',\r\n        headerStyle: (colum, colIndex) => {\r\n            return {textAlign: 'center', width:\"150px\" };\r\n        },\r\n        style: (colum, colIndex) => {\r\n            return {textAlign: 'center' , padding:\"7px 0\" };\r\n        },formatter:(cell, row)=>{\r\n            return <>\r\n                {/*edit button*/}\r\n                {permission&& JSON.parse(permission)[0].admin_write == \"1\" ?\r\n                    <Button onClick={e=>updateModalHandleShow(row.id)} className=\"p-0 me-1\">edit</Button> :\r\n                    // deactive button\r\n                    <Button className=\"p-0 disabled me-1\">edit</Button>\r\n                }\r\n\r\n                {/*delete button*/}\r\n                {permission&& JSON.parse(permission)[0].admin_delete == \"1\"?\r\n                    <Button className=\"p-0 btn-danger\">delete</Button> :\r\n                    // deactive button\r\n                    <Button className=\"p-0 disabled btn-danger\">delete</Button>\r\n                }\r\n            </>\r\n        }\r\n    }\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            {/*all project table */}\r\n            <div className=\"pb-2 projectTableWrapper \">\r\n                <BootstrapTable striped keyField=\"id\"  data={ products } columns={ columns } />\r\n            </div>\r\n\r\n            {/*loading animation*/}\r\n            <LoaderComponent loader={loader}/>\r\n\r\n            {/*update modal*/}\r\n            <ProjectUpdateModal updateModalShow={updateModalShow} setUpdateModalShow={setUpdateModalShow}/>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default memo(ProjectTable);","import React, {useEffect} from 'react';\r\nimport {authCheck} from \"../../AuthCheck/authCheck\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {Button, Container, Row} from \"react-bootstrap\";\r\nimport ComponentTop from \"./allSubComponent/ComponentTop\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ProjectTable from \"./allSubComponent/ProjectTable\";\r\nimport {ToastContainer} from \"react-toastify\";\r\nimport {projectSlice} from \"../../Redux/Slice/projectSlice\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nfunction ProjectsComponent(props) {\r\n    const navigate = useNavigate()\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        authCheck() && JSON.parse(authCheck().permission)[0].admin_read != \"1\" && navigate(\"/\")\r\n    }, [])\r\n\r\n\r\n    if (authCheck() != false && JSON.parse(authCheck().permission)[0].admin_read == \"1\") {\r\n        return (\r\n            <>\r\n                <Container className=\"mt-2 bg-white\">\r\n                    {/*component top part*/}\r\n                    <ComponentTop/>\r\n                    {/*all project table*/}\r\n                    <ProjectTable/>\r\n\r\n                </Container>\r\n\r\n                {/*toast showing container*/}\r\n                <ToastContainer/>\r\n            </>\r\n        );\r\n    } else {\r\n        return (<></>);\r\n    }\r\n}\r\n\r\nexport default ProjectsComponent;","import React from 'react';\r\nimport CommonWrapper from \"../Components/CommonWrapper/CommonWrapper\";\r\nimport SideMenu from \"../Components/NavMenu/SideMenu\";\r\nimport TopNavAndAllWrapper from \"../Components/CommonWrapper/TopNavAndAllWrapper\";\r\nimport TopNav from \"../Components/NavMenu/TopNav\";\r\nimport ProjectsComponent from \"../Components/ProjectsComponent/ProjectsComponent\";\r\n\r\nfunction ProjectPage(props) {\r\n    return (\r\n        <>\r\n            {/*All wrapper*/}\r\n            <CommonWrapper>\r\n                <SideMenu/>\r\n                {/*top nav and all page wrapper*/}\r\n                <TopNavAndAllWrapper>\r\n                    <TopNav/>\r\n                    <ProjectsComponent/>\r\n                </TopNavAndAllWrapper>\r\n            </CommonWrapper>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ProjectPage;","import {createSlice} from \"@reduxjs/toolkit\";\r\n\r\nexport const expenseSlice = createSlice({\r\n    name: \"expense\",\r\n    initialState: {\r\n        ProjectForExpense: [],\r\n        itemAndUnit: false,\r\n        projectForReport: false,\r\n        getSingleExpenseForEdit: false,\r\n        getLastExpense: false,\r\n        expenseForDetailReport: \"\",\r\n        allElementReport:false\r\n    },\r\n    reducers: {\r\n        allProjectForExpense: (state, action) => {\r\n            state.ProjectForExpense = action.payload\r\n        },\r\n        getItemAndUnitSlice: (state, action) => {\r\n            state.itemAndUnit = action.payload\r\n        },\r\n        getProjectForReportSlice: (state, action) => {\r\n            state.projectForReport = action.payload\r\n        },\r\n        getDailyExpenseForEditSlice: (state, action) => {\r\n            state.getSingleExpenseForEdit = action.payload\r\n        },\r\n        getLastExpenseForDailyReportSlice: (state, action) => {\r\n            state.getLastExpense = action.payload\r\n        },\r\n        getExpenseForDetailReportSlice: (state, action) => {\r\n            state.expenseForDetailReport = action.payload\r\n        },\r\n        getElementUsesSlice : (state, action)=>{\r\n            state.allElementReport = action.payload\r\n        }\r\n    }\r\n})","import {authCheck} from \"../../AuthCheck/authCheck\";\r\nimport axios from \"axios\";\r\nimport {\r\n    addExpense, expenseUpdate,\r\n    getDailyExpense, getDailyExpenseForEdit, getElementUses, getExpenseForDetailReport,\r\n    getItemAndUnit, getLastExpenseForDailyReport,\r\n    getProjectsForExpense,\r\n    getTotalExpense\r\n} from \"../../AllRoute/APIRoute\";\r\nimport {errorToast} from \"../../utility/ErrorToast\";\r\nimport {expenseSlice} from \"../Slice/expenseSlice\";\r\nimport {successToast} from \"../../utility/SuccessToast\";\r\n\r\n\r\n//getting project\r\nexport const getProjectForExpenseAction = (payload) => dispatch => {\r\n    payload && payload.setLoader(true)\r\n    const headers = authCheck()\r\n    axios.get(getProjectsForExpense, {headers}).then(res => {\r\n\r\n        if (res.data != false) {\r\n            dispatch(expenseSlice.actions.allProjectForExpense(res.data))\r\n            payload && payload.setLoader(false)\r\n        } else {\r\n            payload && payload.setLoader(false)\r\n            errorToast(\"No data found\")\r\n        }\r\n    }).catch(err => {\r\n        try {\r\n            console.log(err)\r\n            payload && payload.setLoader(false)\r\n            err.response.status == 401 && payload && payload.setLogStatus(false)\r\n            errorToast(\"something went wrong\")\r\n        } catch (e) {\r\n            payload.setLoader && payload.setLoader(false)\r\n            errorToast(\"something went wrong\")\r\n            console.log(err)\r\n        }\r\n    })\r\n}\r\n\r\n//getting item and unit\r\nexport const getItemAndUnitAction = payload => dispatch => {\r\n    const headers = authCheck()\r\n    axios.get(getItemAndUnit, {headers}).then(res => {\r\n        if (res.status == 200) {\r\n            dispatch(expenseSlice.actions.getItemAndUnitSlice(res.data))\r\n        } else {\r\n            dispatch(expenseSlice.actions.getItemAndUnitSlice(false))\r\n            errorToast(\"no data found\")\r\n        }\r\n    }).catch(err => {\r\n        try {\r\n            console.log(err)\r\n            err.response.status == 401 && payload && payload.setLogStatus(false)\r\n            errorToast(\"something went wrong\")\r\n        } catch (e) {\r\n            errorToast(\"something went wrong\")\r\n            console.log(err)\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const getLastExpenseForDailyReportAction = payload => dispatch => {\r\n    const headers = authCheck()\r\n    axios.post(getLastExpenseForDailyReport, payload.data, {headers}).then(res => {\r\n        if (res.data.status == \"success\") {\r\n            dispatch(expenseSlice.actions.getLastExpenseForDailyReportSlice(res.data))\r\n            payload.printBtnRef.current.click()\r\n        } else {\r\n            dispatch(expenseSlice.actions.getLastExpenseForDailyReportSlice(false))\r\n            errorToast(\"some thing went wrong !!\")\r\n        }\r\n    }).catch(err => {\r\n        try {\r\n            console.log(err)\r\n            err.response.status == 401 && payload && payload.setLogStatus(false)\r\n            errorToast(\"something went wrong\")\r\n        } catch (e) {\r\n            errorToast(\"something went wrong\")\r\n            console.log(err)\r\n        }\r\n    })\r\n}\r\n\r\n\r\n//add expense\r\nexport const addExpenseAction = (payload) => dispatch => {\r\n    const headers = authCheck()\r\n\r\n    payload.saveBtnRef.current.disabled = true\r\n\r\n    const data = {\r\n        rows: payload.rows,\r\n        date: payload.date,\r\n        bill_no: payload.bill_no,\r\n        total_expence_amount: payload.total_expence_amount,\r\n        project_id: payload.project_id,\r\n        user_id: payload.user_id\r\n    }\r\n\r\n\r\n    axios.post(addExpense, data, {headers}).then(res => {\r\n        if (res.data.status == \"success\") {\r\n            payload.setExpenseDataForPrint(payload.rows)\r\n            payload.setTotalForPrint(payload.total_expence_amount)\r\n\r\n            const lastExpenseData = {\r\n                data: {\r\n                    projectId: data.project_id,\r\n                    date: data.date\r\n                },\r\n                setLogStatus: payload.setLogStatus,\r\n                printBtnRef: payload.expensePrintButtonRef\r\n            }\r\n\r\n            //dispatch(getLastExpenseForDailyReportAction(lastExpenseData))\r\n            // payload.expensePrintButtonRef.current.click()\r\n            payload.saveBtnRef.current.disabled = false\r\n            payload.setExpenseData([])\r\n            payload.setBill_no(payload.billNoGenerator())\r\n            payload.setTotal(0)\r\n            payload.formClear()\r\n            payload.addExpenseHandleClose()\r\n            successToast(\"expense add successful\")\r\n\r\n        } else if (res.data.status == \"exist\") {\r\n            payload.saveBtnRef.current.disabled = false\r\n            errorToast(\"Information has already been registered on this date. Please update your information !!\")\r\n        } else {\r\n            payload.saveBtnRef.current.disabled = false\r\n            errorToast(\"expense add failed\")\r\n        }\r\n    }).catch(err => {\r\n        try {\r\n            console.log(err)\r\n            err.response.status == 401 && payload && payload.setLogStatus(false)\r\n            payload.saveBtnRef.current.disabled = false\r\n            errorToast(\"something went wrong\")\r\n        } catch (e) {\r\n            payload.saveBtnRef.current.disabled = false\r\n            errorToast(\"something went wrong\")\r\n        }\r\n    })\r\n}\r\n\r\n//get expense for report\r\nexport const getProjectForReportAction = payload => dispatch => {\r\n    const headers = authCheck()\r\n    axios.post(getDailyExpense, {\r\n        projectId: payload.projectId,\r\n        fromDate: payload.fromDate,\r\n        toDate: payload.toDate\r\n    }, {headers}).then(res => {\r\n        if (res.status == 200) {\r\n            dispatch(expenseSlice.actions.getProjectForReportSlice(res.data))\r\n        }\r\n    }).catch(err => {\r\n        try {\r\n            console.log(err)\r\n            err.response.status == 401 && payload && payload.setLogStatus(false)\r\n            errorToast(\"something went wrong with print\")\r\n        } catch (e) {\r\n            errorToast(\"something went wrong print\")\r\n        }\r\n    })\r\n}\r\n\r\n\r\n// get daily expense for edit\r\nexport const getDailyExpenseForEditAction = payload => dispatch => {\r\n    const headers = authCheck()\r\n    axios.post(getDailyExpenseForEdit, payload.data, {headers}).then(res => {\r\n        if (res.data.status == \"success\") {\r\n            dispatch(expenseSlice.actions.getDailyExpenseForEditSlice(res.data))\r\n        }\r\n    }).catch(err => {\r\n        try {\r\n            console.log(err)\r\n            err.response.status == 401 && payload && payload.setLogStatus(false)\r\n            errorToast(\"something went wrong\")\r\n        } catch (e) {\r\n            errorToast(\"something went wrong\")\r\n            console.log(err)\r\n        }\r\n    })\r\n}\r\n\r\n\r\n// expense update\r\nexport const expenseUpdateAction = payload => dispatch => {\r\n    const headers = authCheck()\r\n    axios.post(expenseUpdate, payload.data, {headers}).then(res => {\r\n        if (res.data.status == \"success\") {\r\n            //form cleare\r\n            payload.updateFormRef.current.reset()\r\n            payload.setExpenseIndex(\"n/a\")\r\n            payload.setExpence_detail(\"\")\r\n            payload.setExpence_tag(\"N/A\")\r\n            payload.setUnit_name(\"N/A\")\r\n            payload.setUnitLable(\"N/A\")\r\n            payload.setUnit_per_lable(\"\")\r\n            payload.setItemIndex(\"n/a\")\r\n            payload.setQuantity(\"\")\r\n            payload.setExpence_ammount(\"\")\r\n            payload.getttingDataForEdit()\r\n            payload.setExpenseid(false)\r\n            successToast(\"data updated!!\")\r\n        } else {\r\n            errorToast(\"data updated failed\")\r\n        }\r\n    }).catch(err => {\r\n        try {\r\n            console.log(err)\r\n            err.response.status == 401 && payload && payload.setLogStatus(false)\r\n            errorToast(\"something went wrong\")\r\n        } catch (e) {\r\n            errorToast(\"something went wrong\")\r\n            console.log(err)\r\n        }\r\n    })\r\n}\r\n\r\nexport const getExpenseForDetailReportAction = payload => dispatch => {\r\n    const headers = authCheck()\r\n    axios.post(getExpenseForDetailReport, payload.data, {headers}).then(res => {\r\n        if (res.data.status == \"success\") {\r\n            dispatch(expenseSlice.actions.getExpenseForDetailReportSlice(res.data))\r\n        } else {\r\n            errorToast(\"no data found\")\r\n        }\r\n    }).catch(err => {\r\n        try {\r\n            console.log(err)\r\n            err.response.status == 401 && payload && payload.setLogStatus(false)\r\n            errorToast(\"something went wrong\")\r\n        } catch (e) {\r\n            errorToast(\"something went wrong\")\r\n            console.log(err)\r\n        }\r\n    })\r\n}\r\n\r\n\r\n// get all uses element for calculating\r\nexport const getElementUsesAction = payload => dispatch => {\r\n    const headers = authCheck()\r\n    axios.post(getElementUses, payload.data, {headers}).then(res=>{\r\n        if (res.data.status == \"success\"){\r\n            dispatch(expenseSlice.actions.getElementUsesSlice(res.data))\r\n        }else {\r\n            errorToast(\"no data found\")\r\n        }\r\n    }).catch(err=>{\r\n        try {\r\n            console.log(err)\r\n            err.response.status == 401 && payload && payload.setLogStatus(false)\r\n            errorToast(\"something went wrong\")\r\n        } catch (e) {\r\n            errorToast(\"something went wrong\")\r\n            console.log(err)\r\n        }\r\n    })\r\n}","export const numbersRegex = /^(?!0\\d)\\d*(\\.\\d+)?$/     //equal number and not equal string or mixing\r\n\r\nexport const separator = (x=0)=>{\r\n    return x.toLocaleString('en-in', {maximumFractionDigits:2})\r\n}","import React from 'react';\r\nimport {Col, Row, Table} from \"react-bootstrap\";\r\nimport {authCheck} from \"../../../../AuthCheck/authCheck\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {separator} from \"../../../../utility/Regex\";\r\n\r\nfunction DailyReportPrint({dailyReportPrintRef, projectNameForReportModal, expenseDetailForReport, total}) {\r\n    const totalExpenseData = useSelector(state => state.expense.getLastExpense)\r\n    return (\r\n        <>\r\n            <div className=\"d-none\">\r\n                <div className=\" bg-white px-3 py-3 printExpense\" ref={dailyReportPrintRef}>\r\n                    <section>\r\n                        <h4 className=\"text-center pb-0 mb-1\">Your Company Name</h4>\r\n                        <p className=\"text-center ms-auto pt-0 mt-0 pb-0 mb-1\">Office address and contact number</p>\r\n                        <div style={{borderBottom: \"2px solid rgba(0, 0, 0, 0.45)\"}}></div>\r\n                        <Row className=\"mt-2 mb-3\">\r\n                            <Col lg={6} md={6} sm={6} xs={6} className=\"printMidHeader\">\r\n                                <span>Project Name <span\r\n                                    className=\"clone1  mb-1\">:</span> {projectNameForReportModal}</span><br/>\r\n                                <span>Report type  &nbsp; <span className=\"clone2 mb-1\">:</span> Daily project expense details</span><br/>\r\n                                <span>Report Date   <span\r\n                                    className=\"clone3 \">:</span> {expenseDetailForReport[0] && expenseDetailForReport[0].date}</span><br/>\r\n                            </Col>\r\n                            <Col lg={6} md={6} sm={6} xs={6} className=\"d-flex justify-content-end\">\r\n                                <span>Bill No. <span\r\n                                    className=\"ms-3 mb-1\">:</span> {expenseDetailForReport[0] && expenseDetailForReport[0].bill_no}</span><br/>\r\n                            </Col>\r\n                        </Row>\r\n                    </section>\r\n                    <Table bordered className=\"mb-0 pb-0\">\r\n                        <thead>\r\n                        <tr>\r\n                            <th>Description</th>\r\n                            <th>Tag</th>\r\n                            <th>Total qty.</th>\r\n                            <th>Unit</th>\r\n                            <th>Ammount</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n\r\n                        {/*table row here*/}\r\n                        {expenseDetailForReport && expenseDetailForReport.map((data, i) => {\r\n                            return <>\r\n                                <tr>\r\n                                    <td className=\"printExpenseRow\"\r\n                                        style={{fontSize: \"1rem\"}}>{data.expence_detail}</td>\r\n                                    <td className=\"printExpenseRow\" style={{fontSize: \"1rem\"}}>{data.expence_tag == \"N/A\"?\"\":data.expence_tag}</td>\r\n                                    <td className=\"printExpenseRow\" style={{fontSize: \"1rem\"}}>{data.quantity}</td>\r\n                                    <td className=\"printExpenseRow\" style={{fontSize: \"1rem\"}}>{data.unit_type == \"N/A\"?\"\":data.unit_type}</td>\r\n                                    <td className=\"printExpenseRow ms-auto dailyReportDetailAmount\"\r\n                                        style={{fontSize: \"1rem\"}}>{data.expence_ammount}</td>\r\n\r\n                                </tr>\r\n                            </>\r\n                        })}\r\n                        </tbody>\r\n                    </Table>\r\n\r\n                    <div className=\" align-items-center mt-1 pt-0\">\r\n                        <Row className=\"d-flex justify-content-end align-content-end\">\r\n                            <Col lg={6} md={6} sm={6} xs={6} className=\"\">\r\n                                <div className=\"text-center mt-3 pt-3\">\r\n                                    <p className=\"mb-0 pb-0\">printed by</p>\r\n                                    <p className=\"mt-0 pt-0\">{authCheck() && authCheck().fullName}</p>\r\n                                </div>\r\n                            </Col>\r\n                            <Col lg={6} md={6} sm={6} xs={6} >\r\n                                <Row>\r\n                                    <Col lg={6} md={6} sm={6} xs={6} className=\"d-flex justify-content-end\">\r\n                                        <h5>Total :</h5>\r\n                                    </Col>\r\n                                    <Col lg={6} md={6} sm={6} xs={6} className=\"d-flex justify-content-end\">\r\n                                        <h5 className=\"ms-2\">{separator(total)} tk.</h5>\r\n                                    </Col>\r\n                                    <Col lg={6} md={6} sm={6} xs={6} className=\"d-flex \">\r\n                                        <h5>Expense up\r\n                                            to {totalExpenseData != false && totalExpenseData.lastCostUpTo}</h5>\r\n                                        <h5>:</h5>\r\n                                    </Col>\r\n                                    <Col lg={6} md={6} sm={6} xs={6} className=\"d-flex justify-content-end\">\r\n                                        <h5 className=\"ms-2\">{separator(totalExpenseData != false && totalExpenseData.lastExpense)} tk.</h5>\r\n                                    </Col>\r\n                                    <Col lg={12} md={12} sm={12} xs={12}>\r\n                                        <div style={{borderBottom: \"2px solid rgba(0, 0, 0, 0.45)\"}}></div>\r\n                                    </Col>\r\n                                    <Col lg={6} md={6} sm={6} xs={6} className=\"d-flex justify-content-end\">\r\n                                        <h5>Grand Total :</h5>\r\n                                    </Col>\r\n                                    <Col lg={6} md={6} sm={6} xs={6} className=\"d-flex justify-content-end\">\r\n                                        <h5 className=\"ms-2\">{separator(parseFloat(totalExpenseData != false ? totalExpenseData.lastExpense.length == 0 ? 0 : totalExpenseData.lastExpense : \"0\") + parseFloat(total))} tk.</h5>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                        {/*<div className=\"d-flex \">*/}\r\n                        {/*    <h5>Total :</h5>*/}\r\n                        {/*    <h5 className=\"ms-2\">{totalForPrint} tk.</h5>*/}\r\n                        {/*</div>*/}\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DailyReportPrint;","import React, {forwardRef, useEffect, useMemo, useRef, useState} from 'react';\r\nimport DatePicker from \"react-datepicker\";\r\nimport {Button, Col, Form, Row, Table} from \"react-bootstrap\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {numbersRegex} from \"../../../../utility/Regex\";\r\nimport {errorToast} from \"../../../../utility/ErrorToast\";\r\nimport {removeLocalStorage} from \"../../../../utility/RemoveLocalStorage\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {addExpenseAction, getItemAndUnitAction} from \"../../../../Redux/Action/ExpenseAction\";\r\nimport {authCheck} from \"../../../../AuthCheck/authCheck\";\r\nimport ReactToPrint from 'react-to-print';\r\nimport DailyReportPrint from \"../Report/DailyReportPrint\";\r\n\r\n\r\nfunction AddExpenseForm({expenseProjectId, addExpenseHandleClose, projectName}) {\r\n    const {register, handleSubmit, reset, watch, formState: {errors}} = useForm();\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n\r\n    const saveBtnRef = useRef()\r\n    const printBillRef = useRef()\r\n    const expensePrintButtonRef = useRef()\r\n    const dailyReportPrintRef = useRef()\r\n\r\n    //getting from redux store\r\n    const allItem = useSelector(state => state.expense.itemAndUnit)\r\n\r\n\r\n    // all state\r\n    const [expenseData, setExpenseData] = useState([])\r\n    const [expenseDataForPrint, setExpenseDataForPrint]= useState([])\r\n    const [startDate, setStartDate] = useState(new Date());\r\n    const [bill_no, setBill_no] = useState(false)\r\n    const [unit_type, setUnit_type] = useState(\"N/A\")\r\n    const [total, setTotal] = useState(0)\r\n    const [lastExpense, setLastExpense] = useState(0)\r\n    const [totalForPrint, setTotalForPrint] = useState(0)\r\n    const [existBillCheckBox, setExistBillCheckBox] = useState(false)\r\n    const [logStatus, setLogStatus] = useState(true)\r\n\r\n    const [itemIndex, setItemIndex] = useState(\"n/a\")\r\n    const [unitPerQty, setUnitPerQty] = useState(\"N/A\")\r\n    const [unitLable, setUnitLable] = useState(\"N/A\")\r\n    const [totalQty, setTotalQty] = useState(\"\")\r\n\r\n    // bill generator\r\n    const billNoGenerator = ()=>{\r\n        return JSON.stringify(new Date().getFullYear()) + JSON.stringify(new Date().getMonth()+1) + JSON.stringify(new Date().getDate()) + JSON.stringify(new Date().getHours())+ JSON.stringify(new Date().getMinutes()) + JSON.stringify(new Date().getSeconds()) + JSON.stringify(new Date().getMilliseconds())\r\n    }\r\n\r\n    useEffect(() => {\r\n        // making bill no\r\n        if (existBillCheckBox == false) {\r\n            const bill = billNoGenerator()\r\n            setBill_no(bill)\r\n        }\r\n\r\n    }, [existBillCheckBox])\r\n\r\n    //getting unit lifecycle\r\n    useEffect(() => {\r\n        if (logStatus == false) {\r\n            removeLocalStorage()\r\n            navigate(\"/login\")\r\n        } else {\r\n            const payload = {\r\n                setLogStatus: setLogStatus\r\n            }\r\n            dispatch(getItemAndUnitAction(payload))\r\n        }\r\n    }, [logStatus])\r\n\r\n\r\n    //form clear\r\n    const formClear = ()=>{\r\n        document.getElementById(\"addItem\").reset()\r\n        setUnitPerQty(\"\")\r\n        setUnit_type(\"N/A\")\r\n        setTotalQty(\"\")\r\n        reset()\r\n    }\r\n\r\n    // add data submit for table\r\n    const onSubmit = data => {\r\n        if (bill_no.length != 0) {\r\n            // making date formated\r\n            var startDateYear = startDate.getUTCFullYear()\r\n            var startDateMonth = startDate.getUTCMonth() + 1\r\n            var startDateDay = startDate.getUTCDate()\r\n            let date = startDateYear + \"-\" + startDateMonth + \"-\" + startDateDay\r\n\r\n            const project_id = expenseProjectId\r\n            const quantity = totalQty\r\n            const user_id = authCheck().id\r\n\r\n            // setting another data in data object\r\n            const allData = {...data, quantity , bill_no, date, project_id, unit_type, user_id}\r\n            const expenseArray = expenseData\r\n            expenseArray.push(allData)\r\n            setExpenseData(expenseArray)\r\n\r\n            console.log(allData)\r\n\r\n            // make total ammount for show under the table\r\n            let amount = 0\r\n            expenseArray.map(data => {\r\n                let num = data.expence_ammount\r\n                if (num.length == 0 || !numbersRegex.test(num)) {\r\n                    num = 0\r\n                }\r\n                amount += parseFloat(num)\r\n            })\r\n            setTotal(amount)\r\n\r\n            // finally focus the description field\r\n            document.getElementById(\"descField\").focus()\r\n\r\n            //form cleare\r\n            formClear()\r\n        } else {\r\n            errorToast(\"you shuld must have a bull number !!\")\r\n        }\r\n    };\r\n\r\n\r\n    // expense save\r\n    const expenseSaveOnClick =()=>{\r\n        // making date formated\r\n        var startDateYear = startDate.getUTCFullYear()\r\n        var startDateMonth = startDate.getUTCMonth() + 1\r\n        var startDateDay = startDate.getUTCDate()\r\n        let date = startDateYear + \"-\" + startDateMonth + \"-\" + startDateDay\r\n\r\n        const user_id = authCheck().id\r\n\r\n        const payload = {\r\n            rows:expenseData,\r\n            date:date,\r\n            bill_no:bill_no,\r\n            total_expence_amount:total,\r\n            project_id:expenseProjectId,\r\n            user_id:user_id,\r\n            saveBtnRef:saveBtnRef,\r\n            setLogStatus:setLogStatus,\r\n            billNoGenerator:billNoGenerator,\r\n            setBill_no:setBill_no,\r\n            setTotal:setTotal,\r\n            formClear:formClear,\r\n            setExpenseData:setExpenseData,\r\n            setExpenseDataForPrint:setExpenseDataForPrint,\r\n            setTotalForPrint:setTotalForPrint,\r\n            expensePrintButtonRef:expensePrintButtonRef,\r\n            addExpenseHandleClose:addExpenseHandleClose,\r\n            setLastExpense:setLastExpense\r\n        }\r\n        dispatch(addExpenseAction(payload))\r\n    }\r\n\r\n\r\n    // for start date button\r\n    const ExampleCustomInput = forwardRef(({value, onClick}, ref) => (\r\n        <button disabled={expenseData.length != 0 ? true : false}\r\n                className=\"example-custom-input bg-transparent expenseCalelnder\" onClick={onClick} ref={ref}>\r\n            <span className=\"py-1 px-1 expenseDateString\">\r\n                <i style={{fontSize: \"1rem\"}} className=\" expenseDateIcon text-white far fa-calendar-alt me-1\"></i>\r\n                {value}\r\n            </span>\r\n        </button>\r\n    ));\r\n\r\n\r\n    // view here\r\n    return (\r\n        <>\r\n            <div className=\"projectAddModalBodyWrapper expenseModalBodyWrapper\">\r\n                <div className=\"d-flex justify-content-between\">\r\n                    {/*use exist bill option*/}\r\n                    <Row>\r\n                        <Col lg={4} md={4} sm={6} xs={12}>\r\n                            <Form.Group className=\"  d-flex\">\r\n                                <div className=\"d-flex align-items-center\">\r\n                                    <Form.Check disabled={expenseData.length != 0 ? true : false}\r\n                                                value={existBillCheckBox} onChange={e => {\r\n                                        setExistBillCheckBox(!existBillCheckBox)\r\n                                    }} type=\"checkbox\"/>\r\n                                    <h5 style={{width: \"120px\"}} className=\"ms-1\">use exist bill no.</h5>\r\n                                </div>\r\n                                {existBillCheckBox != false && <section>\r\n                                    <Form.Control disabled={expenseData.length != 0 ? true : false}\r\n                                                  style={{width: \"190px\"}} onChange={e => setBill_no(e.target.value)}\r\n                                                  value={bill_no} type=\"text\" placeholder=\"Enter exist bill no\"/>\r\n                                </section>}\r\n                            </Form.Group>\r\n                            {bill_no.length == 0 &&\r\n                            <span className=\"text-danger\">you shuld must have an bull number</span>}\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    {/*date picker*/}\r\n                    <DatePicker\r\n                        selected={startDate}\r\n                        onChange={(date) => setStartDate(date)}\r\n                        dateFormat=\"yyyy-MMMM-dd\"\r\n                        customInput={<ExampleCustomInput/>}\r\n                    />\r\n                </div>\r\n                <hr/>\r\n\r\n                {/*item add form here*/}\r\n                <Form id=\"addItem\" className=\"mt-2\" onSubmit={handleSubmit(onSubmit)}>\r\n                    <Row>\r\n                        <Col lg={6} md={6} sm={6} xs={12}>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <h5>Description :</h5>\r\n                                <Form.Control\r\n                                    style={{fontSize: \"1.2rem\"}} {...register(\"expence_detail\", {required: true})}\r\n                                    id=\"descField\" as=\"textarea\" rows={5}/>\r\n                                {errors.expence_detail && <span className=\"text-danger\">This field is required</span>}\r\n                            </Form.Group>\r\n                        </Col>\r\n\r\n                        <Col lg={6} md={6} sm={6} xs={12}>\r\n                            <Form.Group className=\"mb-1\" controlId=\"formBasicCheckbox\">\r\n                                <h5>Product type :</h5>\r\n                                {/*product tag or products type*/}\r\n                                <Form.Select\r\n                                    disabled={allItem == false ? true : false} {...register(\"expence_tag\")}\r\n                                    onChange={e=>{\r\n                                        setItemIndex(e.target[e.target.selectedIndex].getAttribute(\"data-index\"))\r\n                                        setUnit_type(\"N/A\")\r\n                                        setUnitPerQty(\"N/A\")\r\n                                        setUnitLable(\"N/A\")\r\n                                    }}\r\n                                >\r\n                                    <option data-index=\"n/a\" value=\"N/A\" selected>select</option>\r\n                                    {allItem != false && allItem.map((data, i)=>(\r\n                                        <option data-index={i} >{data.item_name}</option>\r\n                                    ))}\r\n\r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group className=\"mb-1\" controlId=\"formBasicCheckbox\">\r\n                                <h5>Unit type :</h5>\r\n                                {/*unit type*/}\r\n                                <Form.Select\r\n                                    disabled={itemIndex == \"n/a\" ? true : false}\r\n                                    onChange={e => {\r\n                                        setUnit_type(e.target[e.target.selectedIndex].getAttribute(\"data-type\"))\r\n                                        setUnitPerQty(e.target[e.target.selectedIndex].getAttribute(\"data-unitPerQty\"))\r\n                                        setUnitLable(e.target[e.target.selectedIndex].getAttribute(\"data-unit_lable\"))\r\n                                    }}>\r\n                                    <option selected data-unit_lable=\"N/A\" data-unitPerQty=\"N/A\" data-type=\"\">select</option>\r\n                                    {itemIndex !=\"n/a\" && allItem[itemIndex].unit_tables.map((data, i)=>(\r\n                                        <option data-unit_lable={data.unit_lable} data-unitPerQty={data.unit_per_lable} data-type={data.unit_name} >{data.unit_lable}</option>\r\n                                    ))}\r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                                {/*unit per quantity*/}\r\n                                <h5>Unit per qty :</h5>\r\n                                <div className=\"d-flex justify-content-between align-items-center\">\r\n                                    <Form.Control value={unitPerQty} disabled type=\"text\" placeholder=\"Enter email\"/>\r\n                                    <p className=\"px-2\">{unit_type}</p>\r\n                                </div>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <hr/>\r\n\r\n                        <Col lg={6} md={6} sm={6} xs={12}>\r\n                            <Form.Group className=\"mb-2\" controlId=\"formBasicEmail\">\r\n                                {/*set quantity*/}\r\n                                <h5>Quantity :</h5>\r\n                                <div className=\"d-flex justify-content-between align-items-center\">\r\n                                    <Form.Control onChange={e=>{\r\n                                        const qty = e.target.value\r\n                                        if (!numbersRegex.test(qty) || !numbersRegex.test(unitPerQty) || qty.length == 0){\r\n                                            setTotalQty(\"\")\r\n                                        }else {\r\n                                            const multiply = parseFloat(unitPerQty) * parseFloat(qty)\r\n                                            setTotalQty(multiply)\r\n                                        }\r\n\r\n                                    }} type=\"text\" placeholder=\"Enter email\"/>\r\n                                    <p className=\"px-2\">{unitLable}</p>\r\n                                </div>\r\n                            </Form.Group>\r\n                        </Col>\r\n\r\n                        <Col lg={6} md={6} sm={6} xs={12}>\r\n                            <Form.Group className=\"mb-2\" controlId=\"formBasicEmail\">\r\n                                {/*total quantity*/}\r\n                                <h5>Total qty :</h5>\r\n                                <div className=\"d-flex justify-content-between align-items-center\">\r\n                                    <Form.Control  value={totalQty} onChange={e=>{\r\n                                        const totalQuantity = e.target.value\r\n                                        if (!numbersRegex.test(totalQuantity)){\r\n                                            setTotalQty(\"\")\r\n                                        }else {\r\n                                            setTotalQty(totalQuantity)\r\n                                        }\r\n                                    }} type=\"text\" placeholder=\"Enter email\"/>\r\n                                    <p className=\"px-2\">{unit_type}</p>\r\n                                </div>\r\n                            </Form.Group>\r\n                        </Col>\r\n\r\n                        <Col lg={6} md={6} sm={6} xs={12}>\r\n                            <Form.Group className=\"mb-2\" controlId=\"formBasicEmail\">\r\n                                {/*setting unit price*/}\r\n                                <h5>unit price :</h5>\r\n                                <Form.Control type=\"text\" placeholder=\"Enter email\"/>\r\n                            </Form.Group>\r\n                        </Col>\r\n\r\n                        <Col lg={6} md={6} sm={6} xs={12} className=\"mb-2 d-flex align-items-end\">\r\n                            <Form.Group className=\"\" controlId=\"formBasicEmail\">\r\n                                {/*total amount*/}\r\n                                <h5>Total amount :</h5>\r\n                                <Form.Control {...register(\"expence_ammount\")} type=\"text\" placeholder=\"Enter email\"/>\r\n                            </Form.Group>\r\n\r\n                            {/*add button*/}\r\n                            <Form.Group className=\"mb-\" controlId=\"formBasicEmail\">\r\n                                <Button type=\"submit\" className=\"ms-2 100\">Add + </Button>\r\n                            </Form.Group>\r\n                        </Col>\r\n\r\n                    </Row>\r\n                </Form>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                {/*############################# table start ######################################*/}\r\n                <Table  striped bordered hover>\r\n                    <thead>\r\n                    <tr>\r\n                        <th>Description</th>\r\n                        <th>Tag</th>\r\n                        <th>Unit</th>\r\n                        <th>Total qty.</th>\r\n                        <th>Ammount</th>\r\n                        <th>remove</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n\r\n                    {/*table row here*/}\r\n                    {expenseData.map((data, i) => {\r\n                        return <>\r\n                            <tr>\r\n                                <td style={{fontSize: \"1.2rem\"}}>{data.expence_detail}</td>\r\n                                <td>{data.expence_tag}</td>\r\n                                <td>{data.unit_type}</td>\r\n                                <td>{data.quantity}</td>\r\n                                <td className=\"dailyReportDetailAmount\">{data.expence_ammount}</td>\r\n\r\n                                {/*remove button*/}\r\n                                <td>\r\n                                    <Button type=\"submit\" data-index={i} onClick={e => {\r\n                                        // making an instance of expenseData\r\n                                        const data = expenseData.slice()\r\n\r\n                                        // taking this field's expense amount for substraction amount\r\n                                        let num = data[i].expence_ammount\r\n                                        if (num.length == 0 || !numbersRegex.test(num)) {\r\n                                            // if num length is blank\r\n                                            num = 0\r\n                                        }\r\n                                        // substract the total amount here\r\n                                        const totalVlue = parseFloat(total) - parseFloat(num)\r\n                                        setTotal(totalVlue)\r\n\r\n                                        // removing the row here\r\n                                        data.splice(e.target.getAttribute(\"data-index\"), 1)\r\n                                        setExpenseData(data)\r\n                                    }} className=\"p-0 m-0 btn-danger\">remove</Button>\r\n                                </td>\r\n                            </tr>\r\n                        </>\r\n                    })}\r\n                    </tbody>\r\n                </Table>\r\n\r\n                {/*total amount displaying here*/}\r\n                <hr className=\"py-0 my-0\"/>\r\n                <div className=\"d-flex justify-content-between align-items-center\">\r\n                    <div className=\"d-flex \">\r\n                        <h5>Total :</h5>\r\n                        <h5 className=\"ms-2\">{total} tk.</h5>\r\n                    </div>\r\n                    <Button ref={saveBtnRef} onClick={e=>expenseSaveOnClick()} disabled={expenseData.length ==0?true:false} className=\"mt-2\">Save</Button>\r\n                </div>\r\n            </div>\r\n\r\n            {/* printing*/}\r\n            <div>\r\n                <ReactToPrint\r\n                    trigger={() => <button className=\"d-none\" ref={expensePrintButtonRef} onClick={e=>e.preventDefault()}>Print this out!</button>}\r\n                    content={() => dailyReportPrintRef.current}\r\n                />\r\n                <DailyReportPrint dailyReportPrintRef={dailyReportPrintRef} projectNameForReportModal={projectName} expenseDetailForReport={expenseDataForPrint} total={totalForPrint}/>\r\n            </div>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AddExpenseForm;","import React, {useEffect, useState} from 'react';\r\nimport {Button, Form, Modal} from \"react-bootstrap\";\r\nimport data from \"bootstrap/js/src/dom/data\";\r\nimport AddExpenseForm from \"./AddExpenseForm\";\r\n\r\nfunction ExpenseModal({addExpenseModal = false, setAddExpenseModal, expenseProjectId = false, projectName}) {\r\n\r\n\r\n    const addExpenseHandleClose = () => {\r\n        setAddExpenseModal(false)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"\">\r\n                <Modal fullscreen={true} className=\"expenseModal\" size=\"lg\" show={addExpenseModal}\r\n                       onHide={addExpenseHandleClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title className=\"py-0 my-0\">Expense {expenseProjectId}</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body clssName=\"projectAddModalBody\">\r\n                        {/*add expense form initialized here*/}\r\n                        <AddExpenseForm projectName={projectName} addExpenseHandleClose={addExpenseHandleClose} expenseProjectId={expenseProjectId}/>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ExpenseModal;","import React from 'react';\r\nimport {Button} from \"react-bootstrap\";\r\nimport {expenseSlice} from \"../../../Redux/Slice/expenseSlice\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nfunction ProjectReportModalMainMenu({setUpdateComponentShow, setModalName, setDailyReportShow, setElementUsesReportShow, setSummeryReportShow, setDetailReportShow}) {\r\n    const dispatch = useDispatch()\r\n    return (\r\n        <>\r\n            <div className=\"reportMainButton ms-2 mt-2\">\r\n                <Button onClick={e => {\r\n                    dispatch(expenseSlice.actions.getDailyExpenseForEditSlice(false))\r\n                    setModalName(\"Daily report\")\r\n                    setUpdateComponentShow(false)\r\n                    setDailyReportShow(true)\r\n                    setElementUsesReportShow(false)\r\n                    setSummeryReportShow(false)\r\n                    setDetailReportShow(false)\r\n                }} className=\"w-100 mb-1\">Daily report >></Button>\r\n\r\n                <Button onClick={e => {\r\n                    setModalName(\"Element uses report\")\r\n                    dispatch(expenseSlice.actions.getDailyExpenseForEditSlice(false))\r\n                    setUpdateComponentShow(false)\r\n                    setDailyReportShow(false)\r\n                    setElementUsesReportShow(true)\r\n                    setSummeryReportShow(false)\r\n                    setDetailReportShow(false)\r\n                }} className=\"w-100 mb-1\">Element uses report >></Button>\r\n\r\n                {/*<Button onClick={e => {*/}\r\n                {/*    setModalName(\"Summery report\")*/}\r\n                {/*    dispatch(expenseSlice.actions.getDailyExpenseForEditSlice(false))*/}\r\n                {/*    setDailyReportShow(false)*/}\r\n                {/*    setUpdateComponentShow(false)*/}\r\n                {/*    setElementUsesReportShow(false)*/}\r\n                {/*    setSummeryReportShow(true)*/}\r\n                {/*    setDetailReportShow(false)*/}\r\n                {/*}} className=\"w-100 mb-1\">Summery report >></Button>*/}\r\n\r\n                <Button onClick={e => {\r\n                    setModalName(\"Detail report\")\r\n                    dispatch(expenseSlice.actions.getDailyExpenseForEditSlice(false))\r\n                    setDailyReportShow(false)\r\n                    setUpdateComponentShow(false)\r\n                    setElementUsesReportShow(false)\r\n                    setSummeryReportShow(false)\r\n                    setDetailReportShow(true)\r\n                }} className=\"w-100 mb-1\">Detail report >></Button>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ProjectReportModalMainMenu;","import React, {forwardRef, useEffect, useState} from 'react';\r\nimport {Button, Col, Row} from \"react-bootstrap\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nfunction DailyReportTop({projectNameForReportModal, startDate, setStartDate, endDate, setEndDate}) {\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n\r\n    },[])\r\n\r\n\r\n    // for start date\r\n    const ExampleCustomInput = forwardRef(({ value, onClick }, ref) => (\r\n        <Button className=\"example-custom-input btn-secondary py-0\" onClick={onClick} ref={ref}>\r\n            <span className=\" text-white \">{value}</span>\r\n        </Button>\r\n    ));\r\n    //for end date\r\n    const ExampleCustomInputForEnd = forwardRef(({ value, onClick }, ref) => (\r\n        <Button className=\"example-custom-input btn-secondary py-0 \" onClick={onClick} ref={ref}>\r\n            <span className=\" text-white text-decoration-none \">{value}</span>\r\n        </Button>\r\n    ));\r\n    return (\r\n        <>\r\n            <Row className=\"d-flex align-items-end ps-2\">\r\n               <Col lg={8} md={8} sm={7} xs={12} className=\"d-flex \">\r\n                   <h5 className=\"mb-2\">Project Name : {projectNameForReportModal}</h5>\r\n               </Col>\r\n                <Col lg={4} md={4} sm={6} xs={12} className=\"\">\r\n                    {/*from date*/}\r\n                    <Row>\r\n                        <Col className=\"d-flex justify-content-end align-items-center\" lg={6} md={6} sm={6} xs={6} >\r\n                            <h5 className=\"me-1\">From </h5> :\r\n                        </Col>\r\n                        <Col lg={6} md={6} sm={6} xs={6} >\r\n                           <h5>\r\n                               <DatePicker\r\n                                   selected={startDate}\r\n                                   onChange={(date) => setStartDate(date)}\r\n                                   dateFormat=\"yyyy-MMMM-dd\"\r\n                                   customInput={<ExampleCustomInput />}\r\n                               />\r\n                           </h5>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    {/*to date*/}\r\n                    <Row className=\"dailyReportToDate\">\r\n                        <Col className=\"d-flex justify-content-end align-items-center\" lg={6} md={6} sm={6} xs={6} >\r\n                            <h5 className=\"me-1\">To</h5> :\r\n                        </Col>\r\n                        <Col lg={6} md={6} sm={6} xs={6} >\r\n                            <h5>\r\n                                <DatePicker\r\n                                    selected={endDate}\r\n                                    onChange={(date) => setEndDate(date)}\r\n                                    dateFormat=\"yyyy-MMMM-dd\"\r\n                                    customInput={<ExampleCustomInputForEnd />}\r\n                                />\r\n                            </h5>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"dailyReportToDate d-flex justify-content-end\" >\r\n                        <Col className=\"d-flex justify-content-end align-items-center me-2\" lg={6}>\r\n                         <input className=\"\" placeholder=\"search\"/>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DailyReportTop;","import React from 'react';\r\nimport {Button, Table} from \"react-bootstrap\";\r\nimport {separator} from \"../../../../../utility/Regex\";\r\n\r\nfunction DailyReportBillComponent({projectsForReport, setExpenseDetailForReport, setBillId}) {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"dailyReportBillTable\">\r\n                <Table bordered size=\"sm\">\r\n                    <thead className=\"bg-white\">\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>Date</th>\r\n                        <th>Bill No.</th>\r\n                        <th>Amount</th>\r\n                        <th>Action</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody className=\"bg-white\">\r\n                    {projectsForReport != false && projectsForReport.map((data, i) => (\r\n                        <tr>\r\n                            <td>{i + 1}</td>\r\n                            <td>{data.date}</td>\r\n                            <td>{data.bill_no}</td>\r\n                            <td className=\"dailyReportDetailAmount\">{\r\n                                separator(parseFloat(data.total_expence_amount))\r\n                            }</td>\r\n                            <td className=\"text-center\">\r\n                                <Button data-id={data.id} className=\"btn-danger p-0 m-0 d-inline-block\">del</Button>\r\n                                <Button data-index={i} data-id={data.id} onClick={e => {\r\n                                    setExpenseDetailForReport(projectsForReport[e.target.getAttribute(\"data-index\")].expences)\r\n                                    setBillId(data.id)\r\n                                }} className=\"p-0 m-0 d-inline-block ms-1\">view</Button>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DailyReportBillComponent;","import React, {useEffect, useRef, useState} from 'react';\r\nimport {Button, Table} from \"react-bootstrap\";\r\nimport {numbersRegex, separator} from \"../../../../../utility/Regex\";\r\nimport {authCheck} from \"../../../../../AuthCheck/authCheck\";\r\nimport ReactToPrint from 'react-to-print';\r\nimport DailyReportPrint from \"../DailyReportPrint\";\r\nimport {removeLocalStorage} from \"../../../../../utility/RemoveLocalStorage\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {getLastExpenseForDailyReportAction} from \"../../../../../Redux/Action/ExpenseAction\";\r\n\r\n\r\nfunction DailyReportDetailComponent({projectNameForReportModal, expenseDetailForReport, billId, setUpdateComponentShow, setDailyReportShow, setModalName, projectIdForReportModal}) {\r\n    const printBtnRef = useRef();\r\n    const dailyReportPrintRef = useRef()\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n\r\n    const [logStatus, setLogStatus] = useState(true)\r\n\r\n    useEffect(() => {\r\n        if (logStatus == false) {\r\n            removeLocalStorage()\r\n            navigate(\"/login\")\r\n        }\r\n    }, [logStatus])\r\n\r\n\r\n    const [total, setTotal] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        if (expenseDetailForReport != false) {\r\n            let sum = \"0\"\r\n            expenseDetailForReport.map((data, i) => {\r\n                let num = data.expence_ammount\r\n                if (num.length == 0) {\r\n                    num = 0\r\n                }\r\n                sum = parseFloat(sum) + parseFloat(num)\r\n            })\r\n            setTotal(sum)\r\n        }\r\n    }, [expenseDetailForReport])\r\n\r\n\r\n    const editOnClick = () => {\r\n        if (expenseDetailForReport != false) {\r\n            setModalName(\"Daily Report Update\")\r\n            setDailyReportShow(false)\r\n            setUpdateComponentShow(true)\r\n            // alert(\"bill_no : \" + expenseDetailForReport[0].bill_no + \"bill id: \" + billId)\r\n        }else {\r\n            alert(\"nothing to edit. plese select any bill...\")\r\n        }\r\n    }\r\n\r\n    const printOnClick = () => {\r\n        if (expenseDetailForReport !=false){\r\n            const payload = {\r\n                data: {\r\n                    projectId: projectIdForReportModal,\r\n                    id: billId,\r\n                    date: expenseDetailForReport && expenseDetailForReport[0].date\r\n                },\r\n                setLogStatus: setLogStatus,\r\n                printBtnRef: printBtnRef\r\n            }\r\n            dispatch(getLastExpenseForDailyReportAction(payload))\r\n        }else {\r\n            alert(\"nothing to print. plese select any bill...\")\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div style={{width: \"100%\"}} className=\"d-md-block d-none dailyReportDetailTable\">\r\n                <Table className=\"\" bordered size=\"sm\">\r\n                    <thead className=\"bg-white\">\r\n                    <tr>\r\n                        <th style={{width: \"160px\"}}>Bill No.</th>\r\n                        <th>Desc</th>\r\n                        <th style={{width: \"120px\", textAlign: \"center\"}}>Amount</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody className=\"bg-white\">\r\n                    {expenseDetailForReport != false && expenseDetailForReport.map((data, i) => (\r\n                        <tr>\r\n                            <td>{data.bill_no}</td>\r\n                            <td>{data.expence_detail}</td>\r\n                            <td style={{textAlign: \"right !important\"}} className=\"dailyReportDetailAmount text-center\">\r\n                                {data.expence_ammount.length == 0 ? \"\" : separator(parseFloat(data.expence_ammount))}\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n\r\n            <Table className=\"m-0 p-0 dailyReportDetailCalculation\">\r\n                <thead>\r\n                <tr>\r\n                    <th style={{textAlign: \"right\", border: \"none\"}}></th>\r\n                    <th style={{textAlign: \"right\", border: \"none\"}}></th>\r\n                    <th style={{textAlign: \"right\", border: \"none\"}}></th>\r\n                    <th style={{textAlign: \"right\", borderLeft: \"none\", borderRight: \"1px solid #dadaea99\"}}>Amount</th>\r\n                    <th style={{textAlign: \"right\", width: \"120px\"}}\r\n                        className=\"ms-auto\">{separator(expenseDetailForReport != false ? total : \"0\")} tk.\r\n                    </th>\r\n                </tr>\r\n                </thead>\r\n            </Table>\r\n            <hr className=\"p-0 mt-0 me-2\"/>\r\n            <div className=\"d-flex justify-content-end\">\r\n                <Button onClick={e => {\r\n                    printOnClick()\r\n                }} className=\"d-inline-block me-1\">Print</Button>\r\n                {JSON.parse(authCheck().permission)[0].expense_write == \"1\" && <Button onClick={e => {\r\n                    editOnClick()\r\n                }} className=\"d-inline-block  me-2\">Edit</Button>}\r\n\r\n\r\n            </div>\r\n            <div>\r\n                <ReactToPrint\r\n                    trigger={() => <Button ref={printBtnRef} className=\"d-none d-inline-block\">Print</Button>}\r\n                    content={() => dailyReportPrintRef.current}\r\n                />\r\n                <DailyReportPrint expenseDetailForReport={expenseDetailForReport}\r\n                                  total={total}\r\n                                  projectNameForReportModal={projectNameForReportModal}\r\n                                  dailyReportPrintRef={dailyReportPrintRef}/>\r\n            </div>\r\n\r\n\r\n            <hr className=\"p-0 mt-2 mb-3 me-2\"/>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DailyReportDetailComponent;","import React, {forwardRef, useEffect, useMemo, useRef, useState} from 'react';\r\nimport DatePicker from \"react-datepicker\";\r\nimport {Button, Col, Form, Row, Table} from \"react-bootstrap\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {numbersRegex, separator} from \"../../../../utility/Regex\";\r\nimport {errorToast} from \"../../../../utility/ErrorToast\";\r\nimport {removeLocalStorage} from \"../../../../utility/RemoveLocalStorage\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    expenseUpdateAction,\r\n    getDailyExpenseForEditAction,\r\n    getItemAndUnitAction\r\n} from \"../../../../Redux/Action/ExpenseAction\";\r\nimport {expenseSlice} from \"../../../../Redux/Slice/expenseSlice\";\r\n\r\nfunction UpdateExpenseComponent({expenseDetailForReport, billId, projectIdForReportModal, updateComponentShow}) {\r\n    const {register, handleSubmit, reset, watch, formState: {errors}} = useForm();\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n    const updateFormRef = useRef()\r\n\r\n    //getting from redux store\r\n    const allItem = useSelector(state => state.expense.itemAndUnit)\r\n    const expenseDataForEdit = useSelector(state => state.expense.getSingleExpenseForEdit)\r\n\r\n\r\n    // all state\r\n    const [expenseData, setExpenseData] = useState([])\r\n    const [startDate, setStartDate] = useState(new Date());\r\n\r\n    const [total, setTotal] = useState(0)\r\n    const [existBillCheckBox, setExistBillCheckBox] = useState(false)\r\n    const [logStatus, setLogStatus] = useState(true)\r\n    const [itemIndex, setItemIndex] = useState(\"n/a\")\r\n    const [expenseIndex, setExpenseIndex] = useState(\"n/a\")\r\n    const [expenseId, setExpenseid] = useState(false)\r\n\r\n\r\n    // form Set\r\n    const [unitLable, setUnitLable] = useState(\"N/A\")\r\n    const [unit_per_lable, setUnit_per_lable] = useState(\"\")\r\n    const [unit_name, setUnit_name] = useState(\"N/A\")\r\n\r\n    // form value\r\n    const [bill_no, setBill_no] = useState(false)\r\n    const [expence_detail, setExpence_detail] = useState(\"\")\r\n    const [expence_tag, setExpence_tag] = useState(\"N/A\")\r\n    const [quantity, setQuantity] = useState(\"\")\r\n    const [expence_ammount, setExpence_ammount] = useState(\"\")\r\n\r\n    // useEffect(() => {\r\n    //     // making bill no\r\n    //     if (existBillCheckBox == false) {\r\n    //         const bill = JSON.stringify(new Date().getFullYear()) + JSON.stringify(new Date().getMonth()) + JSON.stringify(new Date().getDate()) + JSON.stringify(new Date().getHours()) + JSON.stringify(new Date().getMinutes()) + JSON.stringify(new Date().getMilliseconds())\r\n    //         setBill_no(bill)\r\n    //     }\r\n    //\r\n    // }, [existBillCheckBox])\r\n\r\n\r\n    // form controll disable\r\n    useEffect(() => {\r\n        if (itemIndex == \"n/a\") {\r\n            setUnitLable(\"N/A\")\r\n            setUnit_per_lable(\"\")\r\n            setUnit_name(\"N/A\")\r\n        }\r\n    }, [itemIndex])\r\n\r\n    //getting unit lifecycle\r\n    useEffect(() => {\r\n        if (logStatus == false) {\r\n            removeLocalStorage()\r\n            navigate(\"/login\")\r\n        } else {\r\n            const payload = {\r\n                setLogStatus: setLogStatus\r\n            }\r\n            dispatch(getItemAndUnitAction(payload))\r\n        }\r\n    }, [logStatus])\r\n\r\n    // getting all data for edit expense\r\n    const getttingDataForEdit = () => {\r\n        setTimeout(() => {\r\n            const payload = {\r\n                data: {\r\n                    id: billId,\r\n                    billNo: expenseDetailForReport[0].bill_no,\r\n                    projectId: projectIdForReportModal\r\n                },\r\n                setLogStatus: setLogStatus\r\n            }\r\n            dispatch(getDailyExpenseForEditAction(payload))\r\n        }, 0)\r\n    }\r\n\r\n\r\n    const makingTotal = () => {\r\n        let sum = \"0\"\r\n        expenseData.map((data, i) => {\r\n            let num = data.expence_ammount\r\n            if (num.length == 0 || !numbersRegex.test(num)) {\r\n                num = \"0\"\r\n            }\r\n            sum = parseFloat(sum) + parseFloat(num)\r\n        })\r\n        setTotal(sum)\r\n    }\r\n\r\n\r\n    // getting all data lifecycle\r\n    useEffect(() => {\r\n        setStartDate(new Date(expenseDetailForReport[0].date))\r\n        setTotal(\"\")\r\n        getttingDataForEdit()\r\n    }, [])\r\n\r\n\r\n    // common lifecylcle\r\n    useEffect(() => {\r\n        expenseDataForEdit != false && setExpenseData(expenseDataForEdit.billInfo.expences)\r\n        expenseDataForEdit != false && makingTotal()\r\n    }, [expenseDataForEdit, expenseData])\r\n\r\n    // update data submit for table\r\n    const onSubmit = async data => {\r\n\r\n\r\n        // making date formated\r\n        var startDateYear = startDate.getUTCFullYear()\r\n        var startDateMonth = startDate.getUTCMonth() + 1\r\n        var startDateDay = startDate.getUTCDate()\r\n        let date = startDateYear + \"-\" + startDateMonth + \"-\" + startDateDay\r\n\r\n\r\n        const payload = {\r\n            data: {\r\n                expence_tag: expence_tag,\r\n                expence_detail: expence_detail,\r\n                unit_name: unit_name,\r\n                expence_ammount: expence_ammount,\r\n                quantity: quantity,\r\n                date: date,\r\n                projectId: projectIdForReportModal,\r\n                expenseId: expenseId,\r\n                billNo: expenseDetailForReport[0].bill_no,\r\n                billId: billId,\r\n                totalExpense: \"\"\r\n            },\r\n            setExpenseid:setExpenseid,\r\n            setLogStatus: setLogStatus,\r\n            updateFormRef: updateFormRef,\r\n            setExpence_detail: setExpence_detail,\r\n            setExpence_tag: setExpence_tag,\r\n            setUnit_name: setUnit_name,\r\n            setUnitLable: setUnitLable,\r\n            setUnit_per_lable: setUnit_per_lable,\r\n            setItemIndex: setItemIndex,\r\n            setExpenseIndex:setExpenseIndex,\r\n            setQuantity: setQuantity,\r\n            setExpence_ammount: setExpence_ammount,\r\n            getttingDataForEdit: getttingDataForEdit\r\n        }\r\n        // updated total making\r\n        const expData = expenseData.slice()\r\n        if (expenseIndex != \"n/a\") {\r\n            expData[expenseIndex] = {...payload.data}\r\n            setExpenseData(expData)\r\n\r\n        } else {\r\n            expData.push(payload.data)\r\n            setExpenseData(expData)\r\n        }\r\n\r\n        let Updatedtotal = 0\r\n\r\n        expData.map(data => {\r\n            let num = data.expence_ammount\r\n            if (!numbersRegex.test(num) || num.length == 0) {\r\n                num = 0\r\n            }\r\n            Updatedtotal = parseFloat(Updatedtotal) + parseFloat(num)\r\n        })\r\n        payload.data.totalExpense = Updatedtotal\r\n\r\n        dispatch(expenseUpdateAction(payload))\r\n\r\n\r\n        reset()\r\n    };\r\n\r\n\r\n    // for start date button\r\n    const ExampleCustomInput = forwardRef(({value, onClick}, ref) => (\r\n        <button\r\n            disabled={true}\r\n            className=\"example-custom-input bg-transparent expenseCalelnder\" onClick={onClick} ref={ref}>\r\n            <span className=\"py-1 px-1 expenseDateString\">\r\n                <i style={{fontSize: \"1rem\"}} className=\" expenseDateIcon text-white far fa-calendar-alt me-1\"></i>\r\n                {value}\r\n            </span>\r\n        </button>\r\n    ));\r\n\r\n\r\n    // view here\r\n    return (\r\n        <>\r\n            <h5>update expense component</h5>\r\n            <h5>bill id : {billId != false && billId}</h5>\r\n            <h5>bill No. : {expenseDetailForReport != false && expenseDetailForReport[0].bill_no}</h5>\r\n            <h5>Project Id: {projectIdForReportModal}</h5>\r\n\r\n\r\n            <div className=\"projectAddModalBodyWrapper expenseModalBodyWrapper\">\r\n\r\n                {/*############################# table start ######################################*/}\r\n                <div className='updateExpense'>\r\n                    <Table striped bordered hover>\r\n                        <thead className=\"updateExpenseTableHead\">\r\n                        <tr>\r\n                            <th>Description</th>\r\n                            <th>Tag</th>\r\n                            <th>Unit</th>\r\n                            <th>Total qty.</th>\r\n                            <th>Ammount</th>\r\n                            <th>remove</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n\r\n                        {/*table row here*/}\r\n                        {expenseDataForEdit != false && expenseData.map((data, i) => {\r\n                            return <>\r\n                                <tr>\r\n                                    <td style={{fontSize: \"1.2rem\"}}>{data.expence_detail}</td>\r\n                                    <td>{data.expence_tag}</td>\r\n                                    <td>{data.unit_type}</td>\r\n                                    <td>{data.quantity.length != false ? separator(parseFloat(data.quantity)) : \"\"}</td>\r\n                                    <td>{data.expence_ammount.length != false ? separator(parseFloat(data.expence_ammount)):\"\"}</td>\r\n\r\n                                    {/*remove button*/}\r\n                                    <td>\r\n                                        {/*<Button type=\"submit\" data-index={i} onClick={e => {*/}\r\n                                        {/*    // making an instance of expenseData*/}\r\n                                        {/*    const data = expenseData.slice()*/}\r\n\r\n                                        {/*    // taking this field's expense amount for substraction amount*/}\r\n                                        {/*    let num = data[i].expence_ammount*/}\r\n                                        {/*    if (num.length == 0 || !numbersRegex.test(num)) {*/}\r\n                                        {/*        // if num length is blank*/}\r\n                                        {/*        num = 0*/}\r\n                                        {/*    }*/}\r\n                                        {/*    // substract the total amount here*/}\r\n                                        {/*    const totalVlue = parseFloat(total) - parseFloat(num)*/}\r\n                                        {/*    setTotal(totalVlue)*/}\r\n\r\n                                        {/*    // removing the row here*/}\r\n                                        {/*    data.splice(e.target.getAttribute(\"data-index\"), 1)*/}\r\n                                        {/*    setExpenseData(data)*/}\r\n                                        {/*}} className=\"p-0 m-0 btn-danger\">remove</Button>*/}\r\n                                        <Button data-index={i} onClick={e => {\r\n                                            const index = e.target.getAttribute(\"data-index\")\r\n                                            // alert(JSON.stringify(expenseData[index]))\r\n                                            setExpenseIndex(index)\r\n                                            const Data = expenseData[index]\r\n                                            setStartDate(new Date(data.date))\r\n                                            setExpence_detail(data.expence_detail)\r\n                                            setExpence_tag(data.expence_tag)\r\n                                            setUnit_name(data.unit_type)\r\n                                            setQuantity(data.quantity)\r\n                                            setExpence_ammount(data.expence_ammount)\r\n                                            setExpenseid(data.id)\r\n                                            setBill_no(data.bill_no)\r\n\r\n\r\n                                            allItem.map((value, itemIndex) => {\r\n                                                if (value.item_name == data.expence_tag) {\r\n                                                    setItemIndex(itemIndex)\r\n                                                }\r\n                                            })\r\n\r\n\r\n                                        }} className=\"btn-success p-0 m-0\">Show</Button>\r\n                                    </td>\r\n                                </tr>\r\n                            </>\r\n                        })}\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n\r\n                {/*total amount displaying here*/}\r\n                <hr className=\"py-0 my-0\"/>\r\n                <div className=\"d-flex \">\r\n                    <h5>Total :</h5>\r\n                    <h5 className=\"ms-2\">{separator(parseFloat(total))} tk.</h5>\r\n\r\n                </div>\r\n                <hr className=\"mt-3\"/>\r\n                {/*table end*/}\r\n\r\n\r\n                <div className=\"\">\r\n                    {/*date picker*/}\r\n                    <DatePicker\r\n                        selected={startDate}\r\n                        onChange={(date) => setStartDate(date)}\r\n                        dateFormat=\"yyyy-MMMM-dd\"\r\n                        customInput={<ExampleCustomInput/>}\r\n                    />\r\n                </div>\r\n                <hr/>\r\n\r\n                {/*item add form here*/}\r\n                <Form id=\"addItem\" ref={updateFormRef} className=\"mt-2\" onSubmit={handleSubmit(onSubmit)}>\r\n                    <Row>\r\n                        <Col lg={6} md={6} sm={6} xs={12}>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <h5>Description :</h5>\r\n                                <Form.Control\r\n                                    value={expence_detail}\r\n                                    onChange={e => setExpence_detail(e.target.value)}\r\n                                    style={{fontSize: \"1.2rem\"}}\r\n                                    id=\"descField\" as=\"textarea\" rows={5}/>\r\n                            </Form.Group>\r\n                        </Col>\r\n\r\n                        <Col lg={6} md={6} sm={6} xs={12}>\r\n                            <Form.Group className=\"mb-1\" controlId=\"exampleForm.formBasicCheckbox\">\r\n                                <h5>Product type :</h5>\r\n                                {/*product tag or products type*/}\r\n                                <Form.Select\r\n\r\n                                    onChange={e => {\r\n                                        setItemIndex(e.target[e.target.selectedIndex].getAttribute(\"data-index\"))\r\n                                        setExpence_tag(e.target[e.target.selectedIndex].value)\r\n                                    }}\r\n                                >\r\n                                    <option data-index=\"n/a\" value=\"N/A\" selected>Select</option>\r\n                                    {allItem != false && allItem.map((data, i) => (\r\n                                        <option selected={expence_tag == data.item_name ? true : false}\r\n                                                value={data.item_name} data-index={i}>{data.item_name}</option>\r\n                                    ))}\r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group className=\"mb-1\" controlId=\"formBasicCheckbox\">\r\n                                <h5>Unit type :</h5>\r\n                                {/*unit type*/}\r\n                                <Form.Select\r\n                                    disabled={itemIndex == \"n/a\" ? true : false}\r\n                                    onChange={e => {\r\n                                        setUnitLable(e.target[e.target.selectedIndex].value)\r\n                                        setUnit_per_lable(e.target[e.target.selectedIndex].getAttribute(\"data-unit_per_lable\"))\r\n                                        setUnit_name(e.target[e.target.selectedIndex].getAttribute(\"data-unit_name\"))\r\n                                    }}>\r\n                                    <option data-unit_per_lable=\"\" data-unit_name=\"N/A\" value=\"N/A\" selected\r\n                                            data-type=\"\">select\r\n                                    </option>\r\n                                    {itemIndex != \"n/a\" && allItem[itemIndex].unit_tables.map((data, i) => (\r\n                                        <option data-unit_name={data.unit_name}\r\n                                                selected={unitLable == data.unit_lable ? true : false}\r\n                                                data-unit_per_lable={data.unit_per_lable}\r\n                                                value={data.unit_lable}>{data.unit_lable}</option>\r\n                                    ))}\r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                                {/*unit per quantity*/}\r\n                                <h5>Unit per qty :</h5>\r\n                                <div className=\"d-flex align-items-center\">\r\n                                    <Form.Control value={unit_per_lable} disabled type=\"text\"\r\n                                                  placeholder=\"Enter email\"/>\r\n                                    <span className=\"ms-1\">{unit_name}</span>\r\n                                </div>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <hr/>\r\n\r\n                        <Col lg={6} md={6} sm={6} xs={12}>\r\n                            <Form.Group className=\"mb-2\" controlId=\"formBasicEmail\">\r\n                                {/*set quantity*/}\r\n                                <h5>Quantity :</h5>\r\n                                <div className=\"d-flex align-items-center\">\r\n                                    <Form.Control\r\n                                        onChange={e => {\r\n                                            if (itemIndex != \"n/a\") {\r\n                                                const perQty = unit_per_lable\r\n                                                const lableQty = e.target.value\r\n                                                if (!numbersRegex.test(perQty) || !numbersRegex.test(lableQty) || perQty.length == \"\" || lableQty.length == \"\") {\r\n                                                    setQuantity(\"\")\r\n                                                } else {\r\n                                                    setQuantity(parseFloat(perQty) * parseFloat(lableQty))\r\n                                                }\r\n                                            }\r\n                                        }}\r\n                                        type=\"text\"\r\n                                        placeholder=\"Enter email\"\r\n                                    />\r\n                                    <span className=\"ms-1\">{unitLable}</span>\r\n                                </div>\r\n                            </Form.Group>\r\n                        </Col>\r\n\r\n                        <Col lg={6} md={6} sm={6} xs={12}>\r\n                            <Form.Group className=\"mb-2\" controlId=\"formBasicEmail\">\r\n                                {/*total quantity*/}\r\n                                <h5>Total qty :</h5>\r\n                                <div className=\"d-flex justify-content-between align-items-center\">\r\n                                    <Form.Control\r\n                                        onChange={e => {\r\n                                            let totalQty = e.target.value\r\n                                            if (totalQty.length == 0 || !numbersRegex.test(totalQty)) {\r\n                                                setQuantity(\"\")\r\n                                            } else {\r\n                                                setQuantity(totalQty)\r\n                                            }\r\n                                        }}\r\n                                        value={quantity}\r\n                                        type=\"text\"\r\n                                        placeholder=\"Enter email\"\r\n                                    />\r\n                                    <span className=\"ms-1\">{unit_name}</span>\r\n                                </div>\r\n                            </Form.Group>\r\n                        </Col>\r\n\r\n                        <Col lg={6} md={6} sm={6} xs={12}>\r\n                            <Form.Group className=\"mb-2\" controlId=\"formBasicEmail\">\r\n                                {/*setting unit price*/}\r\n                                <h5>unit price :</h5>\r\n                                <Form.Control type=\"text\" placeholder=\"Enter email\"/>\r\n                            </Form.Group>\r\n                        </Col>\r\n\r\n                        <Col lg={6} md={6} sm={6} xs={12} className=\"mb-2 d-flex align-items-end\">\r\n                            <Form.Group className=\"\" controlId=\"formBasicEmail\">\r\n                                {/*total amount*/}\r\n                                <h5>Total amount :</h5>\r\n                                <Form.Control\r\n                                    value={expence_ammount}\r\n                                    onChange={e => {\r\n                                        let expAmount = e.target.value\r\n                                        if (expAmount.length == 0 || !numbersRegex.test(expAmount)) {\r\n                                            setExpence_ammount(\"\")\r\n                                        } else {\r\n                                            setExpence_ammount(expAmount)\r\n                                        }\r\n                                    }}\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter email\"\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            {/*add button*/}\r\n                            <Form.Group className=\"mb-\" controlId=\"formBasicEmail\">\r\n                                <Button type=\"submit\" className=\"ms-2 100\">update</Button>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default UpdateExpenseComponent;","import React, {useEffect} from 'react';\r\nimport {separator} from \"../../../../../utility/Regex\";\r\nimport {Col, Row, Table} from \"react-bootstrap\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nfunction DetailReportPrint({detailReportPrintRef, projectNameForReportModal, detailReportStartDate,detailReportEndDate}) {\r\n    const expenseDetail = useSelector(state => state.expense.expenseForDetailReport)\r\n    const detailReportPrintData = expenseDetail == \"\" ? false : expenseDetail.expenses\r\n\r\n    let total = expenseDetail != \"\"? expenseDetail.lastExpense :0\r\n\r\n\r\n\r\n    // useEffect(()=>{\r\n    //     alert(detailReportStartDate)\r\n    // },[])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"d-none\">\r\n                <div className=\"px-2 \" ref={detailReportPrintRef}>\r\n\r\n                    <section className=\"ps-2\">\r\n                        <h4 className=\"text-center pb-0 mb-1\">Your Company Name</h4>\r\n                        <p className=\"text-center ms-auto pt-0 mt-0 pb-0 mb-1\">Office address and contact number</p>\r\n                        <div style={{borderBottom: \"2px solid rgba(0, 0, 0, 0.45)\"}}></div>\r\n                        <Row className=\"mt-2 mb-3\">\r\n                            <Col lg={6} md={6} sm={6} xs={6} className=\"printMidHeader\">\r\n                                <span>Project Name <span\r\n                                    className=\"clone1  \">: </span>\r\n                                    {projectNameForReportModal}\r\n                                </span><br/>\r\n                                <span>Report type  &nbsp; <span className=\"clone2 mb-1\">:</span>&nbsp; Project expense details</span><br/>\r\n                                <span>Report Date   <span\r\n                                    className=\"clone3 \">:</span>\r\n                                     &nbsp; {detailReportStartDate} to {detailReportEndDate}\r\n                                </span><br/>\r\n                            </Col>\r\n                        </Row>\r\n                    </section>\r\n\r\n                   <Table className=\"mb-1\">\r\n                       <tr >\r\n\r\n                           <td style={{border: \"1px solid black\", width:\"50vw\"}} className=\" \" ><b>Expense up to {expenseDetail != \"\"? expenseDetail.lastExpenseDate :\"\"}</b></td>\r\n                           <td style={{border: \"1px solid black\",borderLeft:\"none\", width:\"50vw\"}}\r\n                               className=\"detailReportTotalCost detailReportTableDataAlign \">\r\n                               <b>{separator(expenseDetail != \"\"? expenseDetail.lastExpense :0)} tk.</b></td>\r\n                       </tr>\r\n                   </Table>\r\n                    <Table bordered className=\"\" size=\"sm\">\r\n                        <thead>\r\n                        <tr style={{\r\n                            borderTop: \"1px solid black\",\r\n                        }}>\r\n                            <th style={{width:\"100px\", borderLeft:\"1px solid black\", borderBottom:\"1px solid black\", borderTop:\"1px solid black\"}} className=\"detailReportTableDataCommonAlign\">Date</th>\r\n                            <th style={{width:\"auto\", borderBottom:\"1px solid black\", borderTop:\"1px solid black\"}} className=\"detailReportTableDataCommonAlign\">Description</th>\r\n                            <th style={{width:\"120px\", borderBottom:\"1px solid black\", borderTop:\"1px solid black\"}} className=\"detailReportTableDataCommonAlign\">Total Qty.</th>\r\n                            <th style={{width:\"120px\", borderBottom:\"1px solid black\", borderTop:\"1px solid black\"}} className=\"detailReportTableDataCommonAlign\">Unit</th>\r\n                            <th style={{width:\"100px\", borderRight:\"1px solid black\", borderBottom:\"1px solid black\", borderTop:\"1px solid black\"}} className=\"detailReportTableDataCommonAlign\">Amount</th>\r\n                        </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                        {\r\n                            detailReportPrintData != false && detailReportPrintData.map((data, dataIndex) => {\r\n                                let expencesFirstRow = 0\r\n                                let dailyExp = 0\r\n                                dailyExp = parseFloat(dailyExp) + parseFloat(data.expences[expencesFirstRow].expence_ammount.length != 0 ? data.expences[expencesFirstRow].expence_ammount : 0)\r\n                                total = parseFloat(total) + parseFloat(data.expences[expencesFirstRow].expence_ammount.length != 0 ? data.expences[expencesFirstRow].expence_ammount : 0)\r\n                                return <>\r\n                                    <tr className=\"\">\r\n                                        <td rowSpan={data.expences.length}\r\n                                            style={{\r\n                                                border: \"1px solid black\"\r\n                                            }}\r\n                                            className=\"detailReportTableDataCommonAlign \">{data.date}</td>\r\n                                        <td style={{\r\n                                            borderBottom: \"1px solid black\",\r\n                                            borderTop:\"1px solid black\"\r\n                                        }} className=\"py-1 \">{data.expences[expencesFirstRow].expence_detail}</td>\r\n                                        <td style={{\r\n                                            borderBottom: \"1px solid black\",\r\n                                            borderTop:\"1px solid black\"\r\n                                        }}\r\n                                            className=\"detailReportTableDataCommonAlign py-1\">{data.expences[expencesFirstRow].quantity}</td>\r\n                                        <td style={{\r\n                                            borderBottom: \"1px solid black\",\r\n                                            borderTop:\"1px solid black\"\r\n                                        }}\r\n                                            className=\"detailReportTableDataCommonAlign py-1\">{data.expences[expencesFirstRow].unit_type == \"N/A\" ? \"\" :data.expences[expencesFirstRow].unit_type}</td>\r\n                                        <td style={{\r\n                                            borderBottom: \"1px solid black\",\r\n                                            borderTop:\"1px solid black\",\r\n                                            borderRight:\"1px solid black\"\r\n                                        }}\r\n                                            className=\"detailReportTableDataAlign py-1\">{data.expences[expencesFirstRow].expence_ammount}</td>\r\n                                    </tr>\r\n                                    {data.expences.map((value, expencesIndex) => {\r\n                                        if (expencesIndex != 0) {\r\n                                            dailyExp = parseFloat(dailyExp) + parseFloat(data.expences[expencesIndex].expence_ammount.length != 0 ? data.expences[expencesIndex].expence_ammount : 0)\r\n                                            total = parseFloat(total) + parseFloat(data.expences[expencesIndex].expence_ammount.length != 0 ? data.expences[expencesIndex].expence_ammount : 0)\r\n                                            return <tr className=\"\">\r\n                                                <td style={{\r\n                                                    borderBottom: \"1px solid black\",\r\n                                                    borderTop:\"1px solid black\"\r\n                                                }} className=\"py-1\">{data.expences[expencesIndex].expence_detail}</td>\r\n                                                <td style={{\r\n                                                    borderBottom: \"1px solid black\",\r\n                                                    borderTop:\"1px solid black\"\r\n                                                }}\r\n                                                    className=\"detailReportTableDataCommonAlign py-1\">{data.expences[expencesIndex].quantity}</td>\r\n                                                <td style={{\r\n                                                    borderBottom: \"1px solid black\",\r\n                                                    borderTop:\"1px solid black\"\r\n                                                }}\r\n                                                    className=\"detailReportTableDataCommonAlign py-1\">{data.expences[expencesIndex].unit_type == \"N/A\" ? \"\" :data.expences[expencesIndex].unit_type}</td>\r\n                                                <td style={{\r\n                                                    borderBottom: \"1px solid black\",\r\n                                                    borderTop:\"1px solid black\",\r\n                                                    borderRight:\"1px solid black\"\r\n                                                }}\r\n                                                    className=\"detailReportTableDataAlign py-1\">{data.expences[expencesIndex].expence_ammount}</td>\r\n                                            </tr>\r\n\r\n                                        }\r\n                                    })}\r\n                                    <tr>\r\n                                        <td style={{borderRight: \"1px solid black\"}} className=\"detailReportDailyCost detailReportTableDataAlign\" colSpan=\"2\"></td>\r\n                                        <td style={{border: \"1px solid black\"}} className=\"detailReportDailyCost detailReportTableDataAlign\" colSpan=\"2\"><b>Today's\r\n                                            expense {separator(dailyExp)} tk.</b></td>\r\n                                        <td style={{border: \"1px solid black\"}}\r\n                                            className=\"detailReportTotalCost detailReportTableDataAlign\">\r\n                                            <b>{separator(total)} tk.</b></td>\r\n                                    </tr>\r\n                                    <br/>\r\n                                </>\r\n                            })}\r\n\r\n\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DetailReportPrint;","import React, {useEffect, useRef, useState} from 'react';\r\nimport {Button, Table} from \"react-bootstrap\";\r\nimport {numbersRegex, separator} from \"../../../../../utility/Regex\";\r\nimport ReactToPrint from 'react-to-print';\r\nimport DetailReportPrint from \"./DetailReportPrint\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nfunction DetailReportTable({projectNameForReportModal, detailReportStartDate, detailReportEndDate}) {\r\n    const detailReportPrintRef = useRef()\r\n\r\n    const expenseDetail = useSelector(state => state.expense.expenseForDetailReport)\r\n    let total = expenseDetail.length != \"\" ? expenseDetail.lastExpense : 0\r\n    const pageStyle = `{ margin: .5in 0in }`;\r\n\r\n    // useEffect(()=>{\r\n    //     alert(detailReportStartDate)\r\n    // },[])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"expenseDetailTable\">\r\n                <Table bordered className=\"mb-2\" size=\"sm\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th className=\"detailReportTableDataCommonAlign\">Date</th>\r\n                        <th className=\"detailReportTableDataCommonAlign\">Description</th>\r\n                        <th className=\"detailReportTableDataCommonAlign\">Tag</th>\r\n                        <th className=\"detailReportTableDataCommonAlign\">Total Qty.</th>\r\n                        <th className=\"detailReportTableDataCommonAlign\">Unit</th>\r\n                        <th className=\"detailReportTableDataCommonAlign\">Amount</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {expenseDetail != \"\" && expenseDetail.expenses.map((data, i) => {\r\n                        let expencesFirstRow = 0\r\n                        let dailyExp = 0\r\n                        dailyExp = parseFloat(dailyExp) + parseFloat(data.expences[expencesFirstRow].expence_ammount.length != 0 ? data.expences[expencesFirstRow].expence_ammount : 0)\r\n                        total = parseFloat(total) + parseFloat(data.expences[expencesFirstRow].expence_ammount.length != 0 ? data.expences[expencesFirstRow].expence_ammount : 0)\r\n\r\n                        return <>\r\n                            <tr className=\"DetailReportCommonRow\">\r\n                                <td className=\"detailReportTableDataCommonAlign\"\r\n                                    rowSpan={data.expences.length}>{data.date}</td>\r\n                                <td>{data.expences[expencesFirstRow].expence_detail}</td>\r\n                                <td className=\"detailReportTableDataCommonAlign\">{data.expences[expencesFirstRow].expence_tag}</td>\r\n                                <td className=\"detailReportTableDataCommonAlign\">{data.expences[expencesFirstRow].quantity}</td>\r\n                                <td className=\"detailReportTableDataCommonAlign\">{data.expences[expencesFirstRow].unit_type}</td>\r\n                                <td className=\"detailReportTableDataAlign\">{data.expences[expencesFirstRow].expence_ammount}</td>\r\n                            </tr>\r\n                            {data.expences.map((value, expencesIndex) => {\r\n                                if (expencesIndex != 0) {\r\n                                    dailyExp = parseFloat(dailyExp) + parseFloat(data.expences[expencesIndex].expence_ammount.length != 0 ? data.expences[expencesIndex].expence_ammount : 0)\r\n                                    total = parseFloat(total) + parseFloat(data.expences[expencesIndex].expence_ammount.length != 0 ? data.expences[expencesIndex].expence_ammount : 0)\r\n                                    return <tr className=\"DetailReportCommonRow\">\r\n                                        <td>{data.expences[expencesIndex].expence_detail}</td>\r\n                                        <td className=\"detailReportTableDataCommonAlign\">{data.expences[expencesIndex].expence_tag}</td>\r\n                                        <td className=\"detailReportTableDataCommonAlign\">{data.expences[expencesIndex].quantity}</td>\r\n                                        <td className=\"detailReportTableDataCommonAlign\">{data.expences[expencesIndex].unit_type}</td>\r\n                                        <td className=\"detailReportTableDataAlign\">{data.expences[expencesIndex].expence_ammount}</td>\r\n                                    </tr>\r\n                                }\r\n                            })}\r\n                            <tr>\r\n                                <td style={{borderRight: \"1px solid black\"}} className=\"detailReportDailyCost detailReportTableDataAlign\" colSpan=\"3\"></td>\r\n                                <td style={{border: \"1px solid black\"}} className=\"detailReportDailyCost detailReportTableDataAlign\" colSpan=\"2\"><b>Today's\r\n                                    expense {separator(dailyExp)} tk.</b></td>\r\n                                <td style={{border: \"1px solid black\"}}\r\n                                    className=\"detailReportTotalCost detailReportTableDataAlign\">\r\n                                    <b>{separator(total)} tk.</b></td>\r\n                            </tr>\r\n                        </>\r\n\r\n                    })}\r\n\r\n\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n            <hr/>\r\n            <div className=\"d-flex justify-content-end\">\r\n                <ReactToPrint\r\n                    pageStyle={pageStyle}\r\n                    trigger={() => <Button className=\"d-inline-block me-2 mb-2 ms-auto\">print</Button>}\r\n                    content={() => detailReportPrintRef.current}\r\n                />\r\n            </div>\r\n            <DetailReportPrint detailReportEndDate={detailReportEndDate} detailReportStartDate={detailReportStartDate} projectNameForReportModal={projectNameForReportModal}  detailReportPrintRef={detailReportPrintRef}/>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DetailReportTable;","import React, {useEffect, useState} from 'react';\r\nimport DetailReportTable from \"./DetailReportTable\";\r\nimport DetailReportPrint from \"./DetailReportPrint\";\r\n\r\nfunction DetailReportComponent({projectNameForReportModal, detailReportStartDate,detailReportEndDate}) {\r\n    const [startDate, setStartDate] = useState()\r\n    const [endDate, setEndDate] = useState()\r\n    useEffect(()=>{\r\n        const beginDate = new Date(detailReportStartDate)\r\n        const date = beginDate.getUTCDate()\r\n        const month = beginDate.getUTCMonth()+1\r\n        const year = beginDate.getUTCFullYear()\r\n\r\n        const formatedStartDate = year+\"-\"+month+\"-\"+date\r\n\r\n\r\n        const endDte = new Date(detailReportEndDate)\r\n        const eDate = endDte.getUTCDate()\r\n        const eMonth = endDte.getUTCMonth()+1\r\n        const eYear = endDte.getUTCFullYear()\r\n\r\n        const formatedEndDate = eYear+\"-\"+eMonth+\"-\"+eDate\r\n\r\n        setStartDate(formatedStartDate)\r\n        setEndDate(formatedEndDate)\r\n    },[detailReportEndDate, detailReportStartDate])\r\n    return (\r\n        <>\r\n           <div className=\"px-2\">\r\n               <DetailReportTable detailReportEndDate={endDate} detailReportStartDate={startDate} projectNameForReportModal={projectNameForReportModal}/>\r\n           </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DetailReportComponent;","import React, {forwardRef, useEffect, useState} from 'react';\r\nimport {Button, Col, Row} from \"react-bootstrap\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport {removeLocalStorage} from \"../../../../../utility/RemoveLocalStorage\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getExpenseForDetailReportAction} from \"../../../../../Redux/Action/ExpenseAction\";\r\nimport {separator} from \"../../../../../utility/Regex\";\r\n\r\nfunction DetailReportComponentTop({projectIdForReportModal, detailReportShow, projectNameForReportModal, startDate, setStartDate, endDate, setEndDate}) {\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n\r\n    const [logStatus, setLogStatus] = useState(true)\r\n    const expenseDetail = useSelector(state => state.expense.expenseForDetailReport)\r\n\r\n\r\n    useEffect(()=>{\r\n        if (logStatus == false){\r\n            removeLocalStorage()\r\n            navigate(\"/login\")\r\n        }\r\n    },[logStatus])\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n       if (detailReportShow == 1){\r\n           const beginDate = new Date(startDate)\r\n           const date = beginDate.getUTCDate()\r\n           const month = beginDate.getUTCMonth()+1\r\n           const year = beginDate.getUTCFullYear()\r\n\r\n           const formatedStartDate = year+\"-\"+month+\"-\"+date\r\n\r\n\r\n           const endDte = new Date(endDate)\r\n           const eDate = endDte.getUTCDate()\r\n           const eMonth = endDte.getUTCMonth()+1\r\n           const eYear = endDte.getUTCFullYear()\r\n\r\n           const formatedEndDate = eYear+\"-\"+eMonth+\"-\"+eDate\r\n\r\n            const payload = {\r\n                data:{\r\n                    projectId:projectIdForReportModal,\r\n                    fromDate:formatedStartDate,\r\n                    toDate:formatedEndDate\r\n                },\r\n                setLogStatus:setLogStatus\r\n            }\r\n\r\n            dispatch(getExpenseForDetailReportAction(payload))\r\n\r\n\r\n       }\r\n    },[startDate, endDate])\r\n\r\n\r\n    // for start date\r\n    const ExampleCustomInput = forwardRef(({ value, onClick }, ref) => (\r\n        <Button className=\"example-custom-input btn-secondary py-0\" onClick={onClick} ref={ref}>\r\n            <span className=\" text-white \">{value}</span>\r\n        </Button>\r\n    ));\r\n    //for end date\r\n    const ExampleCustomInputForEnd = forwardRef(({ value, onClick }, ref) => (\r\n        <Button className=\"example-custom-input btn-secondary py-0 \" onClick={onClick} ref={ref}>\r\n            <span className=\" text-white text-decoration-none \">{value}</span>\r\n        </Button>\r\n    ));\r\n    return (\r\n        <>\r\n            <Row className=\"d-flex align-items-end ps-2\">\r\n                <Col lg={8} md={8} sm={7} xs={12} className=\"d-flex \">\r\n                    <h5 className=\"mb-2\">Project Name : {projectNameForReportModal}</h5>\r\n                </Col>\r\n                <Col lg={4} md={4} sm={6} xs={12} className=\"\">\r\n                    {/*from date*/}\r\n                    <Row>\r\n                        <Col className=\"d-flex justify-content-end align-items-center\" lg={6} md={6} sm={6} xs={6} >\r\n                            <h5 className=\"me-1\">From </h5> :\r\n                        </Col>\r\n                        <Col lg={6} md={6} sm={6} xs={6} >\r\n                            <h5>\r\n                                <DatePicker\r\n                                    selected={startDate}\r\n                                    onChange={(date) => setStartDate(date)}\r\n                                    dateFormat=\"yyyy-MMMM-dd\"\r\n                                    customInput={<ExampleCustomInput />}\r\n                                />\r\n                            </h5>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    {/*to date*/}\r\n                    <Row className=\"dailyReportToDate\">\r\n                        <Col className=\"d-flex justify-content-end align-items-center\" lg={6} md={6} sm={6} xs={6} >\r\n                            <h5 className=\"me-1\">To</h5> :\r\n                        </Col>\r\n                        <Col lg={6} md={6} sm={6} xs={6} >\r\n                            <h5>\r\n                                <DatePicker\r\n                                    selected={endDate}\r\n                                    onChange={(date) => setEndDate(date)}\r\n                                    dateFormat=\"yyyy-MMMM-dd\"\r\n                                    customInput={<ExampleCustomInputForEnd />}\r\n                                />\r\n                            </h5>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"dailyReportToDate d-flex justify-content-end\" >\r\n                        <Col className=\"d-flex justify-content-end align-items-center me-2\" lg={6}>\r\n                            <input className=\"\" placeholder=\"search\"/>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Col>\r\n            </Row>\r\n            <Row className=\" \">\r\n                <Col>\r\n                    <h5 className=\" detailReportLastExp mt-0 me-2\">Expense up to {expenseDetail != \"\" && expenseDetail.lastExpenseDate} : {expenseDetail != \"\" && separator(expenseDetail.lastExpense)} tk.</h5>\r\n                </Col>\r\n            </Row>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DetailReportComponentTop;","import React from 'react';\r\nimport {Col} from \"react-bootstrap\";\r\n\r\nfunction ElementUsesTopComponent({projectNameForReportModal}) {\r\n    return (\r\n        <>\r\n            <Col lg={8} md={8} sm={7} xs={12} className=\"d-flex \">\r\n                <h5 className=\"mb-2\">Project Name : {projectNameForReportModal}</h5>\r\n            </Col>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ElementUsesTopComponent;","import React, {useEffect, useState} from 'react';\r\nimport {Col, Row, Table} from \"react-bootstrap\";\r\nimport {authCheck} from \"../../../../../AuthCheck/authCheck\";\r\nimport {numbersRegex, separator} from \"../../../../../utility/Regex\";\r\n\r\nfunction ElementUsesTable({elementReportData}) {\r\n    const [totalElementUses, setTotalElementUses] = useState(\"n/a\")\r\n\r\n    useEffect(()=>{\r\n        if (elementReportData != \"n/a\"){\r\n            let total = 0\r\n            elementReportData.map(data =>{\r\n                let num = data.quantity\r\n                if (num.length == 0 && !numbersRegex(num)){\r\n                    num = 0\r\n                }\r\n                total = parseFloat(total) + parseFloat(num)\r\n            })\r\n            setTotalElementUses(total)\r\n        }\r\n    },[elementReportData])\r\n\r\n    return (\r\n        <>\r\n            <Table className=\"bg-white\" bordered>\r\n                <thead>\r\n                <tr>\r\n                    <th>#</th>\r\n                    <th>Date</th>\r\n                    <th>Element Name</th>\r\n                    <th>Quantity</th>\r\n                    <th>Unit</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {elementReportData != \"n/a\" ? elementReportData.map((data, i) => (\r\n                    <tr>\r\n                        <td className=\"printExpenseRow\">{i + 1}</td>\r\n                        <td className=\"printExpenseRow\">{data.date}</td>\r\n                        <td className=\"printExpenseRow\">{data.expence_tag}</td>\r\n                        <td className=\"text-end printExpenseRow\">{data.quantity}</td>\r\n                        <td className=\"text-center printExpenseRow\">{data.unit_type}</td>\r\n                    </tr>\r\n                )) : <tr>\r\n                    <td colSpan={5} className=\"text-center\">no data</td>\r\n                </tr>}\r\n\r\n                {elementReportData != \"n/a\" &&  <tr>\r\n                    <td colSpan={3} className=\"text-center\">\r\n                        <h4>Total used</h4>\r\n                    </td>\r\n                    <td className=\"text-end\">\r\n                        <h4>{separator(totalElementUses)}</h4>\r\n                    </td>\r\n                    <td className=\"text-center\">\r\n                        <h4>{elementReportData != \"n/a\" && elementReportData[0].unit_type}</h4>\r\n                    </td>\r\n                </tr>}\r\n                </tbody>\r\n            </Table>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ElementUsesTable;","import React from 'react';\r\nimport ElementUsesTable from \"./ElementUsesTable\";\r\nimport {Col, Row} from \"react-bootstrap\";\r\n\r\nfunction ElementUsesReportPrint({elementReportData,printRef, projectNameForReportModal}) {\r\n    return (\r\n        <>\r\n            <div className=\"d-none\">\r\n                <div ref={printRef}>\r\n                    <section>\r\n                        <h4 className=\"text-center pb-0 mb-1\">Your Company Name</h4>\r\n                        <p className=\"text-center ms-auto pt-0 mt-0 pb-0 mb-1\">Office address and contact number</p>\r\n                        <div style={{borderBottom: \"2px solid rgba(0, 0, 0, 0.45)\"}}></div>\r\n                        <Row className=\"mt-2 mb-3\">\r\n                            <Col lg={6} md={6} sm={6} xs={6} className=\"printMidHeader\">\r\n                                <span>Project Name <span\r\n                                    className=\"clone1  mb-1\">:</span> {projectNameForReportModal}</span><br/>\r\n                                <span>Report type  &nbsp; <span className=\"clone2 mb-1\">:</span> Element uses report</span><br/>\r\n\r\n                            </Col>\r\n\r\n                        </Row>\r\n                    </section>\r\n\r\n\r\n                    <ElementUsesTable elementReportData={elementReportData}/>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ElementUsesReportPrint;","import React, {useEffect, useRef, useState} from 'react';\r\nimport {Button, Col, Form, Row, Table} from 'react-bootstrap'\r\nimport ElementUsesTable from \"./ElementUsesTable\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {removeLocalStorage} from \"../../../../../utility/RemoveLocalStorage\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {getElementUses} from \"../../../../../AllRoute/APIRoute\";\r\nimport {getElementUsesAction} from \"../../../../../Redux/Action/ExpenseAction\";\r\nimport {authCheck} from \"../../../../../AuthCheck/authCheck\";\r\nimport ElementUsesReportPrint from \"./ElementUsesReportPrint\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport {expenseSlice} from \"../../../../../Redux/Slice/expenseSlice\";\r\n\r\n\r\nfunction ElementUsesComponent({elementUsesReportShow,projectNameForReportModal, projectIdForReportModal}) {\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n    const printRef = useRef()\r\n\r\n    const allElementData = useSelector(state => state.expense.allElementReport)\r\n    const [logStatus, setLogStatus] = useState(true)\r\n    const [elementIndex, setElementIndex] = useState(\"n/a\")\r\n    const [elementReportData, setElementReportData] = useState(\"n/a\")\r\n\r\n    const pageStyle = `{ margin: .5in 0in }`;\r\n\r\n    useEffect(() => {\r\n        if (logStatus == false) {\r\n            removeLocalStorage()\r\n            navigate(\"/login\")\r\n        }\r\n    }, [logStatus])\r\n\r\n\r\n    useEffect(() => {\r\n        if (elementUsesReportShow != false) {\r\n            dispatch(expenseSlice.actions.getElementUsesSlice(false))\r\n            const payload = {\r\n                data: {\r\n                    projectId: projectIdForReportModal\r\n                },\r\n                setLogStatus: setLogStatus\r\n            }\r\n\r\n            dispatch(getElementUsesAction(payload))\r\n        }\r\n    }, [elementUsesReportShow])\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col lg={3} md={3} sm={4} xs={12}>\r\n                    <h5>Choose a material : </h5>\r\n                    <Form>\r\n                        <Form.Select\r\n                            onChange={e => {\r\n                                const index = e.target[e.target.selectedIndex].getAttribute(\"data-index\")\r\n                                index != \"n/a\" ? setElementReportData(allElementData.usesData[index].expences) : setElementReportData(\"n/a\")\r\n\r\n                            }}\r\n                            aria-label=\"Default select example\">\r\n                            <option data-index=\"n/a\" selected>please choose\r\n                            </option>\r\n                            {allElementData != false && allElementData.usesData.map((data, i) => (\r\n                                <>\r\n                                    <option data-index={i} value=\"1\">{data.item_name}</option>\r\n                                </>\r\n                            ))}\r\n                        </Form.Select>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n            <hr/>\r\n\r\n\r\n            {/*element uses Table*/}\r\n\r\n            <div className=\"elementUsesTable\">\r\n                <ElementUsesTable elementReportData={elementReportData}/>\r\n            </div>\r\n            <div className=\"d-flex justify-content-end mt-2\">\r\n                <ReactToPrint\r\n                    pageStyle={pageStyle}\r\n                    trigger={() => <Button>Print</Button>}\r\n                    content={() => printRef.current}\r\n                />\r\n            </div>\r\n            <ElementUsesReportPrint printRef={printRef} projectNameForReportModal={projectNameForReportModal} elementReportData={elementReportData}/>\r\n\r\n\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ElementUsesComponent;","import React, {useEffect, useState} from 'react';\r\nimport {Button, Col, Modal, Row, Container} from \"react-bootstrap\";\r\nimport ProjectReportModalMainMenu from \"./ProjectReportModalMainMenu\";\r\nimport DailyReportTop from \"./Report/DailyReport/DailyReportTop\";\r\nimport DailyReportBillComponent from \"./Report/DailyReport/DailyReportBillComponent\";\r\nimport DailyReportDetailComponent from \"./Report/DailyReport/DailyReportDetailComponent\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {removeLocalStorage} from \"../../../utility/RemoveLocalStorage\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {getProjectForReportAction} from \"../../../Redux/Action/ExpenseAction\";\r\nimport UpdateExpenseComponent from \"./UpdateExpense/updateExpenseComponent\";\r\nimport DetailReportComponent from \"./Report/DetailReport/DetailReportComponent\";\r\nimport DetailReportComponentTop from \"./Report/DetailReport/DetailReportComponentTop\";\r\nimport ElementUsesTopComponent from \"./Report/ElementUsesReport/ElementUsesTopComponent\";\r\nimport ElementUsesComponent from \"./Report/ElementUsesReport/ElementUsesComponent\";\r\n\r\nfunction ProjectReportModal({projectReportShow = false, setProjectReportShow, projectIdForReportModal, projectNameForReportModal}) {\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n\r\n    // from redux store\r\n    const projectsForReport = useSelector(state => state.expense.projectForReport)\r\n\r\n    //state declear\r\n    const [modalName, setModalName] = useState(\"Daily report\")\r\n\r\n    const [expenseDetailForReport, setExpenseDetailForReport] = useState(false)\r\n    const [billId, setBillId] = useState(false)\r\n    const [dailyReportShow, setDailyReportShow] = useState(true)\r\n    const [elementUsesReportShow, setElementUsesReportShow] = useState(false)\r\n    const [summeryReportShow, setSummeryReportShow] = useState(false)\r\n    const [detailReportShow, setDetailReportShow] = useState(false)\r\n    const [logStatus, setLogStatus] = useState(true)\r\n    const [updateComponentShow, setUpdateComponentShow] = useState(false)\r\n\r\n    const [startDate, setStartDate] = useState(new Date().setDate(new Date().getDate() - 7));\r\n    const [endDate, setEndDate] = useState(new Date());\r\n\r\n    const [detailReportStartDate, setDetailReportStartDate] = useState(new Date().setDate(new Date().getDate() - 7));\r\n    const [detailReportEndDate, setDetailReportEndDate] = useState(new Date());\r\n\r\n\r\n    useEffect(() => {\r\n        if (logStatus == false) {\r\n            removeLocalStorage()\r\n            navigate(\"/login\")\r\n        }\r\n    }, [logStatus])\r\n\r\n\r\n    //get projects for daily report\r\n    useEffect(() => {\r\n        // setting date formate\r\n        const fromDate = new Date(startDate)\r\n        const fromYear = fromDate.getUTCFullYear()\r\n        const fromMonth = fromDate.getUTCMonth() + 1\r\n        const fromDay = fromDate.getUTCDate()\r\n        const fromFormatedDate = fromYear + \"-\" + fromMonth + \"-\" + fromDay\r\n\r\n        const toDate = new Date(endDate)\r\n        const toYear = toDate.getUTCFullYear()\r\n        const toMonth = toDate.getUTCMonth() + 1\r\n        const toDay = toDate.getUTCDate()\r\n        const toFormatedDate = toYear + \"-\" + toMonth + \"-\" + toDay\r\n\r\n\r\n\r\n        //cal axios for get projects for daily report\r\n        if (dailyReportShow == true && projectReportShow == true) {\r\n            //resetting something\r\n            setBillId(false)\r\n            setExpenseDetailForReport(false)\r\n\r\n            const payload = {\r\n                setLogStatus: setLogStatus,\r\n                projectId: projectIdForReportModal,\r\n                fromDate: fromFormatedDate,\r\n                toDate: toFormatedDate\r\n            }\r\n            dispatch(getProjectForReportAction(payload))\r\n        }\r\n    }, [projectReportShow, dailyReportShow, startDate, endDate])\r\n\r\n\r\n    //project report handle close\r\n    const projectReportHandleClose = () =>{\r\n        setUpdateComponentShow(false)\r\n        setDailyReportShow(true)\r\n        setProjectReportShow(false)\r\n        setElementUsesReportShow(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Modal className=\"expenseModal\" fullscreen={true} show={projectReportShow}\r\n                   onHide={projectReportHandleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{modalName} {updateComponentShow} {projectIdForReportModal}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Container className=\"px-0\" fluid={true}>\r\n                        <Row className=\"\">\r\n                            {/*main button*/}\r\n                            <Col lg={2} md={3} sm={3} xs={3} style={{minHeight: \"87vh\", position:\"relative\"}} className=\" bg-white \">\r\n                                <ProjectReportModalMainMenu\r\n                                    setUpdateComponentShow={setUpdateComponentShow}\r\n                                    setModalName={setModalName}\r\n                                    setDailyReportShow={setDailyReportShow}\r\n                                    setElementUsesReportShow={setElementUsesReportShow}\r\n                                    setSummeryReportShow={setSummeryReportShow}\r\n                                    setDetailReportShow={setDetailReportShow}\r\n                                />\r\n                            </Col>\r\n\r\n                            {/*daily report and update*/}\r\n                            {dailyReportShow == true && <Col lg={10} md={9} sm={9} xs={9} className=\"\">\r\n                                <div className=\"bg-white reportContentWreapper mt-2\">\r\n                                    {/*daily report top*/}\r\n                                    <DailyReportTop endDate={endDate} setEndDate={setEndDate}\r\n                                                    setStartDate={setStartDate} startDate={startDate}\r\n                                                    projectNameForReportModal={projectNameForReportModal}/>\r\n                                    <hr className=\"mt-0\"/>\r\n                                    {/*tables */}\r\n                                    <Row className=\"ms-1\">\r\n                                        {/*bill table */}\r\n                                        <Col className=\"me-0 pe-1\" lg={6} md={6} sm={12} xs={12}>\r\n                                            <DailyReportBillComponent setBillId={setBillId}\r\n                                                                      setExpenseDetailForReport={setExpenseDetailForReport}\r\n                                                                      projectsForReport={projectsForReport}/>\r\n                                            <hr className=\"mt-0 pt-0\"/>\r\n                                        </Col>\r\n\r\n                                        {/*bill detail table*/}\r\n                                        <Col className=\"ms-0 ps-0\" lg={6} md={6} sm={12} xs={12}>\r\n                                            <DailyReportDetailComponent billId={billId}\r\n                                                                        projectNameForReportModal={projectNameForReportModal}\r\n                                                                        projectIdForReportModal={projectIdForReportModal}\r\n                                                                        setModalName={setModalName}\r\n                                                                        setDailyReportShow={setDailyReportShow}\r\n                                                                        setUpdateComponentShow={setUpdateComponentShow}\r\n                                                                        expenseDetailForReport={expenseDetailForReport}/>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </div>\r\n                            </Col>}\r\n\r\n                            {/*element uses report*/}\r\n                            {elementUsesReportShow == true && <Col lg={10} md={9} sm={9} xs={9} className=\"mt-2\">\r\n                                <div className=\"bg-white reportContentWreapper px-2\">\r\n                                    {/*componentTop*/}\r\n                                    <ElementUsesTopComponent projectNameForReportModal={projectNameForReportModal}/>\r\n                                    <hr className=\"mt-0 pt-0\"/>\r\n\r\n                                    {/*element uses component*/}\r\n                                    <ElementUsesComponent projectNameForReportModal={projectNameForReportModal} projectIdForReportModal={projectIdForReportModal} elementUsesReportShow={elementUsesReportShow}/>\r\n                                </div>\r\n                            </Col>}\r\n\r\n                            {/*summery report*/}\r\n                            {summeryReportShow == true && <Col lg={10} md={9} sm={9} xs={12} className=\"\">\r\n                                <div className=\"bg-white reportContentWreapper reportContentWreapper\">\r\n                                    <h2>Summery Report</h2>\r\n                                </div>\r\n                            </Col>}\r\n\r\n                            {/*detail report*/}\r\n                            {detailReportShow == true && <Col lg={10} md={9} sm={9} xs={9} className=\"mt-2\">\r\n                                <div className=\"bg-white reportContentWreapper\">\r\n                                    {/*<hr className=\"mt-0\"/>*/}\r\n                                    <DetailReportComponentTop projectIdForReportModal={projectIdForReportModal} detailReportShow={detailReportShow} startDate={detailReportStartDate} endDate={detailReportEndDate} setStartDate={setDetailReportStartDate} setEndDate={setDetailReportEndDate} projectNameForReportModal={projectNameForReportModal}/>\r\n                                    <hr className=\"mt-0\"/>\r\n                                    {/*main component*/}\r\n                                    <DetailReportComponent projectNameForReportModal={projectNameForReportModal} detailReportStartDate={detailReportStartDate} detailReportEndDate={detailReportEndDate} />\r\n                                </div>\r\n                            </Col>}\r\n                            {updateComponentShow==true && <Col lg={10} md={9} sm={9} xs={9} className=\"\">\r\n                                <div className=\"bg-white reportContentWreapper\">\r\n                                    <UpdateExpenseComponent updateComponentShow={updateComponentShow} projectIdForReportModal={projectIdForReportModal} expenseDetailForReport={expenseDetailForReport} billId={billId}/>\r\n                                </div>\r\n                            </Col>}\r\n                        </Row>\r\n                    </Container>\r\n                </Modal.Body>\r\n\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ProjectReportModal;","import React, {memo, useEffect, useState} from 'react';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {authCheck} from \"../../../AuthCheck/authCheck\";\r\nimport {removeLocalStorage} from \"../../../utility/RemoveLocalStorage\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport LoaderComponent from \"../../LoaderComponent/LoaderComponent\";\r\nimport {getProjectForExpenseAction} from \"../../../Redux/Action/ExpenseAction\";\r\nimport ExpenseModal from \"./AddExpense/ExpenseModal\";\r\nimport ProjectReportModal from \"./ProjectReportModal\";\r\nimport {expenseSlice} from \"../../../Redux/Slice/expenseSlice\";\r\n\r\n\r\nfunction ProjectTableForExpense(props) {\r\n    const navigate = useNavigate()\r\n    const permission = authCheck().permission\r\n    const dispatch = useDispatch()\r\n    const tableData = useSelector(state => state.expense.ProjectForExpense)\r\n\r\n    // all state here\r\n    const [addExpenseModal, setAddExpenseModal] = useState(false);\r\n    const [expenseProjectId, setExpenseProjectId] = useState(\"\")\r\n    const [logStatus, setLogStatus] = useState(true)\r\n    const [loader, setLoader] = useState(false)\r\n    const [projectName, setProjectName] = useState(\"\")\r\n\r\n    const [projectReportShow, setProjectReportShow] = useState(false)\r\n    const [projectIdForReportModal, setProjectIdForReportModal] = useState(\"\")\r\n    const [projectNameForReportModal, setProjectNameForReportModal] = useState(\"\")\r\n\r\n\r\n    useEffect(() => {\r\n        // chekcing authentin or not\r\n        if (logStatus == false) {\r\n            removeLocalStorage()\r\n            navigate(\"/login\")\r\n        }\r\n\r\n        dispatch(expenseSlice.actions.allProjectForExpense([]))\r\n\r\n        // get all project for table\r\n        const payload = {\r\n            setLogStatus: setLogStatus,\r\n            setLoader: setLoader\r\n        }\r\n        dispatch(getProjectForExpenseAction(payload))\r\n\r\n    }, [logStatus])\r\n\r\n\r\n    // expense modal show handle\r\n    const expenseModalHandleShow = (id, name) => {\r\n        setProjectName(name)\r\n        setExpenseProjectId(id)\r\n        setAddExpenseModal(true)\r\n    }\r\n\r\n\r\n    // project report mdal show handle\r\n    const projectReportModalHandleShow = (id, projectName) => {\r\n        setProjectNameForReportModal(projectName)\r\n        setProjectIdForReportModal(id)\r\n        setProjectReportShow(true)\r\n    }\r\n\r\n\r\n    // table columnh initialize\r\n    const products = tableData;\r\n    const columns = [{\r\n        dataField: 'id',\r\n        text: '#',\r\n        headerStyle: (colum, colIndex) => {\r\n            return {width: '60px', height: \"30px\", textAlign: 'center'};\r\n        },\r\n        style: (colum, colIndex) => {\r\n            return {textAlign: 'center', padding: \"7px 0\"};\r\n        },\r\n        formatter: (cell, row, rowIndex) => {\r\n            return <section>\r\n                {rowIndex + 1}\r\n            </section>\r\n        }\r\n    }, {\r\n        dataField: 'project_name',\r\n        text: 'Project Name',\r\n        headerStyle: (colum, colIndex) => {\r\n            return {textAlign: 'center'};\r\n        },\r\n        style: (colum, colIndex) => {\r\n            return {padding: \"7px 3px\"};\r\n        }\r\n    }, {\r\n        dataField: 'owner_phn',\r\n        text: 'Client phone',\r\n        headerStyle: (colum, colIndex) => {\r\n            return {textAlign: 'center', width: \"130px\"};\r\n        },\r\n        style: (colum, colIndex) => {\r\n            return {textAlign: 'center', padding: \"7px 3px\"};\r\n        }\r\n    }, {\r\n        dataField: 'project_location',\r\n        text: 'Project location',\r\n        headerStyle: (colum, colIndex) => {\r\n            return {textAlign: 'center', width: \"180px\"};\r\n        },\r\n        style: (colum, colIndex) => {\r\n            return {textAlign: 'center', padding: \"7px 3px\"};\r\n        }\r\n    }, {\r\n        dataField: 'start_date',\r\n        text: 'start date',\r\n        headerStyle: (colum, colIndex) => {\r\n            return {textAlign: 'center', width: \"100px\"};\r\n        },\r\n        style: (colum, colIndex) => {\r\n            return {textAlign: 'center', padding: \"7px 0\"};\r\n        }\r\n    }, {\r\n        dataField: 'deadline',\r\n        text: 'End date',\r\n        headerStyle: (colum, colIndex) => {\r\n            return {textAlign: 'center', width: \"100px\"};\r\n        },\r\n        style: (colum, colIndex) => {\r\n            return {textAlign: 'center', padding: \"7px 0\"};\r\n        }\r\n    }, {\r\n        dataField: 'status',\r\n        text: 'status',\r\n        headerStyle: (colum, colIndex) => {\r\n            return {textAlign: 'center', width: \"80px\"};\r\n        },\r\n        style: (colum, colIndex) => {\r\n            return {textAlign: 'center', padding: \"7px 0\"};\r\n        },\r\n        formatter: (cell, row) => {\r\n            return <section>\r\n                {cell == \"1\" ? <span className=\"bg-warning text-white\">pending</span> : cell == \"0\" ?\r\n                    <span className=\"bg-success text-white\">finished</span> :\r\n                    <span className=\"bg-danger text-white\">deni</span>}\r\n            </section>\r\n        }\r\n\r\n    }, {\r\n        dataField: 'Action',\r\n        isDummyField: true,\r\n        text: 'Action',\r\n        headerStyle: (colum, colIndex) => {\r\n            return {textAlign: 'center', width: \"120px\"};\r\n        },\r\n        style: (colum, colIndex) => {\r\n            return {textAlign: 'center', padding: \"7px 0\"};\r\n        }, formatter: (cell, row) => {\r\n            return <>\r\n                {/*expense button*/}\r\n                {permission && JSON.parse(permission)[0].expense_write == \"1\" ?\r\n                    <Button onClick={e => {\r\n                        expenseModalHandleShow(row.id, row.project_name)\r\n                    }} className=\"p-0 me-1\">expense</Button> :\r\n                    // deactive button\r\n                    <Button className=\"p-0 disabled me-1\">expense</Button>\r\n                }\r\n\r\n                {/*report show button*/}\r\n                <Button onClick={e => {\r\n                    projectReportModalHandleShow(row.id, row.project_name)\r\n                }} className=\"p-0 btn-primary\">report</Button>\r\n            </>\r\n        }\r\n    }\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            {/*all project table */}\r\n            <div className=\"pb-2 projectTableWrapper \">\r\n                <BootstrapTable striped keyField=\"id\" data={products} columns={columns}/>\r\n            </div>\r\n\r\n            {/*loading animation*/}\r\n            <LoaderComponent loader={loader}/>\r\n\r\n            {/*add expense modal*/}\r\n            <ExpenseModal projectName={projectName} expenseProjectId={expenseProjectId}\r\n                          addExpenseModal={addExpenseModal} setAddExpenseModal={setAddExpenseModal}/>\r\n\r\n            {/*project report modal*/}\r\n            <ProjectReportModal projectNameForReportModal={projectNameForReportModal} projectIdForReportModal={projectIdForReportModal} projectReportShow={projectReportShow}\r\n                                setProjectReportShow={setProjectReportShow}/>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default memo(ProjectTableForExpense);","import React from 'react';\r\nimport {Button} from \"react-bootstrap\";\r\n\r\nfunction TopComponentForExpense(props) {\r\n    return (\r\n        <>\r\n            <div className=\"pt-2\">\r\n                <h5><i className=\"fas fa-home\"></i> Home / Project expense</h5>\r\n            </div>\r\n            <hr/>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TopComponentForExpense;","import React, {useEffect} from 'react';\r\nimport {authCheck} from \"../../AuthCheck/authCheck\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport ProjectTableForExpense from \"./allSubComponent/ProjectTableForExpense\";\r\nimport TopComponentForExpense from \"./allSubComponent/AddExpense/TopComponentForExpense\";\r\nimport {Container} from \"react-bootstrap\";\r\nimport {ToastContainer} from \"react-toastify\";\r\n\r\nfunction ProjectExpenceComponent(props) {\r\n    const navigate = useNavigate()\r\n\r\n\r\n    useEffect(()=>{\r\n        authCheck() && JSON.parse(authCheck().permission)[0].expense_read != \"1\" && navigate(\"/\")\r\n    },[])\r\n\r\n    if (authCheck() && JSON.parse(authCheck().permission)[0].expense_read == \"1\"){\r\n        return (\r\n            <>\r\n                <Container className=\"bg-white mt-2\">\r\n                    {/*top component*/}\r\n                    <TopComponentForExpense/>\r\n\r\n                    {/*all projects*/}\r\n                    <ProjectTableForExpense/>\r\n                </Container>\r\n\r\n                {/*toast container*/}\r\n                <ToastContainer/>\r\n            </>\r\n        );\r\n    }else {return <div>{navigate(\"/\")}</div>}\r\n\r\n\r\n}\r\n\r\nexport default ProjectExpenceComponent;","import React from 'react';\r\nimport CommonWrapper from \"../Components/CommonWrapper/CommonWrapper\";\r\nimport SideMenu from \"../Components/NavMenu/SideMenu\";\r\nimport TopNavAndAllWrapper from \"../Components/CommonWrapper/TopNavAndAllWrapper\";\r\nimport TopNav from \"../Components/NavMenu/TopNav\";\r\nimport Demo from \"../Components/Demo/Demo\";\r\nimport ProjectExpenceComponent from \"../Components/ProjectExpense/ProjectExpenceComponent\";\r\n\r\nfunction ProjectExpensePage(props) {\r\n    return (\r\n        <>\r\n            {/*All wrapper*/}\r\n            <CommonWrapper>\r\n                <SideMenu/>\r\n                {/*top nav and all page wrapper*/}\r\n                <TopNavAndAllWrapper>\r\n                    <TopNav/>\r\n                   <ProjectExpenceComponent/>\r\n                </TopNavAndAllWrapper>\r\n            </CommonWrapper>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ProjectExpensePage;","import React from 'react';\r\nimport {Routes, Route, Navigate} from \"react-router-dom\"\r\nimport Dashboard from \"../Pages/Dashboard\";\r\nimport LoginPage from \"../Pages/LoginPage\";\r\nimport ProjectPage from \"../Pages/ProjectPage\";\r\nimport ProjectExpensePage from \"../Pages/ProjectExpensePage\";\r\nfunction AppRoute(props) {\r\n\r\n    return (\r\n        <>\r\n            <Routes>\r\n                <Route path=\"/\" element={<Navigate to=\"/projects\"/>}/>\r\n                <Route path=\"/login\" element={<LoginPage/>}/>\r\n                <Route path=\"/projects\" element={<ProjectPage/>}/>\r\n                <Route path=\"/projectExpense\" element={<ProjectExpensePage/>}/>\r\n            </Routes>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AppRoute;","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Assets/Css/CustomCss.css'\nimport {HashRouter} from \"react-router-dom\";\nimport AppRoute from \"./AllRoute/AppRoute\";\n\nfunction App(props) {\n    return (\n        <>\n            <HashRouter>\n                <AppRoute/>\n            </HashRouter>\n        </>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport {loginSlice} from \"./Slice/loginSlice\";\r\nimport {projectSlice} from \"./Slice/projectSlice\";\r\nimport {expenseSlice} from \"./Slice/expenseSlice\";\r\n\r\nexport const store = configureStore({\r\n    devTools:true,\r\n    reducer : {\r\n        login : loginSlice.reducer,\r\n        projects: projectSlice.reducer,\r\n        expense: expenseSlice.reducer\r\n    }\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./Redux/store\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n        <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();\n"],"sourceRoot":""}